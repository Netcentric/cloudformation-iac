AWSTemplateFormatVersion: '2010-09-09'
Description: 'Environment with a generic host (no predefined role or nature).'

################################################################################
#
# Decision Trees:
#
#   DNS entries:
#     HostedZoneName != ''
#       true  -> Created
#       false -> None [default]
#
#   DMZ behavior:
#     SgDmzVpc != ''
#       true  -> SG will be attached to the instance (-> VPC wide DMZ)
#       false -> Environment specific SG will be created, emulating the behavior of an env-wide DMZ
#
################################################################################


################################################################################
#
# Metadata (optional)
# provide details about the template
#
# See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
#
################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Naming details'
        Parameters:
          - Role
          - RootStackName
      - Label:
          default: 'Environment configuration'
        Parameters:
          - InstanceProfile
          - RootKeyName
          - SgDmzInfra
          - SgDmzVpc
          - VpcId
      - Label:
          default: 'Additional features'
        Parameters:
          - FeatureAutoSnapshot
          - FeatureInternetAccess
          - FeatureUptimeWindows
          - FeatureVolumeEncryption
      - Label:
          default: 'Host Groups'
        Parameters:
          - HostGroupsAvailabilityZones
          - HostGroupsCount
          - HostGroupsSubnetIds
      - Label:
          default: 'Host'
        Parameters:
          - ImageId
          - InstanceType
          - SecurityGroupIds
          - VolumeOptIops
          - VolumeOptSize
          - VolumeOptType
          - VolumeTmpIops
          - VolumeTmpSize
          - VolumeTmpType
          - VolumeVarIops
          - VolumeVarSize
          - VolumeVarType
      - Label:
          default: 'DNS Record configuration (optional)'
        Parameters:
          - DnsServiceToken
          - HostedZoneName


################################################################################
#
# Parameters (optional)
# Passes values into templates when creating a stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
################################################################################

Parameters:
  #=======================================
  # Naming details
  #=======================================

  Role:
    Description: 'The role that will be assigned to the host (will be used for the naming of components).'
    Type: String

  RootStackName:
    Description: 'Name of the top-level stack to which this stack, if nested, ultimately belongs (this stacks name else).'
    Type: String

  #=======================================
  # Environment configuration
  #=======================================

  InstanceProfile:
    Description: 'The ARN of an IAM Instance Profile that is used to grant this instance permissions, e.g. to register against the configuration manager (Chef/Puppet).'
    Type: String
    Default: ''

  RootKeyName:
    Description: 'The name of the Amazon EC2 key pair that will be used to access the Instances via SSH.'
    Type: AWS::EC2::KeyPair::KeyName

  SgDmzInfra:
    Description: 'The Security Group used to create a DMZ with all hosts in the INFRA VPC (optional).'
    Type: String
    Default: ''

  SgDmzVpc:
    Description: 'The ID of the Security Group in the VPC that is used to create a DMZ within that VPC (optional).'
    Type: String
    Default: ''

  VpcId:
    Description: 'The ID of the VPC in which the targets are located.'
    Type: AWS::EC2::VPC::Id

  #=======================================
  # Additional features
  #=======================================

  FeatureAutoSnapshot:
    Description: 'Whether EBS Volumes should be backed up automatically not. This feature can be enabled by specifying a ScheduleName that was used with the "automatic-snapshots" template (examples: "Daily").'
    Type: String
    Default: 'disabled'

  FeatureInternetAccess:
    Description: 'Whether access to the internet should be possible for Instances in this environment.'
    Type: String
    AllowedValues: [ 'disabled', 'enabled' ]
    Default: 'enabled'

  FeatureUptimeWindows:
    Description: 'A list consisting of two elements in the UNIX cron format, the first representing the start and the second the stop times. If set to "disabled", the instances will run 24/7 (example: "* 4 ? * MON-FRI *", "* 20 ? * MON-FRI *").'
    Type: CommaDelimitedList
    Default: 'disabled'

  FeatureVolumeEncryption:
    Description: 'Whether all Volumes of all Instance should be encrypted or not.'
    Type: String
    AllowedValues: [ 'false', 'true' ]
    Default: 'false'

  #=======================================
  # Host Groups
  #=======================================

  HostGroupsCount:
    Description: 'The number of Host Groups that should be created (max: 1).'
    Type: Number
    AllowedValues: [ 1 ]

  HostGroupsAvailabilityZones:
    Description: 'The names of the Availability Zones containing the Subnets specified in HostGroupsSubnetIds. Must be as many items as specified in "HostGroupsCount" (example: "eu-central-1a, eu-central-1b, eu-central-1c").'
    Type: CommaDelimitedList

  HostGroupsSubnetIds:
    Description: 'The IDs of the Subnets, the application instances should be placed into. Must be as many items as specified in "HostGroupsCount" (example: "subnet-1234567890abcdefg, subnet-abcdefg1234567890, subnet-12345abcdefg67890").'
    Type: CommaDelimitedList

  #=======================================
  # Host
  #=======================================

  ImageId:
    Description: 'The unique ID of the Amazon Machine Image (AMI) the Instance will be created from.'
    Type: AWS::EC2::Image::Id

  InstanceType:
    Description: 'The instance type for the Instance (examples: "t3a.micro" or "m5.xlarge").'
    Type: String
    Default: 't2.small'

  SecurityGroupIds:
    Description: 'The Security Groups, identified by their IDs, that will be attached to the Instance.'
    Type: CommaDelimitedList
    Default: ''

  VolumeOptIops:
    Description: 'The number of I/O operations per second (IOPs) that the "/opt" Volume of the Instance will support (only used if VolumeOptType is set to "io1", "io2" or "gp3").'
    Type: Number
    Default: 3000

  VolumeOptSize:
    Description: 'The size of the "/opt" Volume of the Instance, in gibibytes (if this value is 0 the volume will not be created).'
    Type: Number
    Default: 0

  VolumeOptType:
    Description: 'The Volume type of the "/opt" Volume of the Instance (if you set the type to "io1" or "io2", you must also set the VolumeOptIops property).'
    Type: String
    AllowedValues: [ 'standard', 'io1', 'io2', 'gp2', 'gp3', 'sc1', 'st1' ]
    Default: 'gp3'

  VolumeTmpIops:
    Description: 'The number of I/O operations per second (IOPs) that the "/tmp" Volume of the Instance will support (only used if VolumeTmpType is set to "io1", "io2" or "gp3").'
    Type: Number
    Default: 3000

  VolumeTmpSize:
    Description: 'The size of the "/tmp" Volume of the Instance, in gibibytes (if this value is 0 the volume will not be created).'
    Type: Number
    Default: 0

  VolumeTmpType:
    Description: 'The Volume type of the "/tmp" Volume of the Instance (if you set the type to "io1" or "io2", you must also set the VolumeTmpIops property).'
    Type: String
    AllowedValues: [ 'standard', 'io1', 'io2', 'gp2', 'gp3', 'sc1', 'st1' ]
    Default: 'gp3'

  VolumeVarIops:
    Description: 'The number of I/O operations per second (IOPs) that the "/var" Volume of the Instance will support (only used if VolumeVarType is set to "io1", "io2" or "gp3").'
    Type: Number
    Default: 3000

  VolumeVarSize:
    Description: 'The size of the "/var" Volume of the Instance, in gibibytes (if this value is 0 the volume will not be created).'
    Type: Number
    Default: 0

  VolumeVarType:
    Description: 'The Volume type of the "/var" Volume of the Instance (if you set the type to "io1" or "io2", you must also set the VolumeVarIops property).'
    Type: String
    AllowedValues: [ 'standard', 'io1', 'io2', 'gp2', 'gp3', 'sc1', 'st1' ]
    Default: 'gp3'

  #=======================================
  # DNS Record configuration (optional)
  #=======================================

  DnsServiceToken:
    Description: 'The SNS Topic ARN or Lambda function ARN that was provided to access the service that manages remote DNS Records (only required if DNS Records are managed in a different account; must be from the same region as this stack).'
    Type: String
    Default: ''

  HostedZoneName:
    Description: 'The name of the domain for the Hosted Zone where the DNS Record Sets should be added (if left empty, no DNS Record will be created; example: "my-project.example.com").'
    Type: String
    Default: ''


################################################################################
#
# Conditions (optional)
# Includes statements that define when a resource is created or when a property is defined
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
#
################################################################################

Conditions:
  #----------------------------
  # Network
  #----------------------------

  # If no Security Group for a VPC wide DMZ (SgDmzVpc) is provided, we will set up this AppEnv to behave like a normal environment with "only" an env-wide DMZ
  CreateDmzWithEnv: !Equals [ !Ref SgDmzVpc, '' ]

  # If a Security Group for a DMZ with a central Management VPC has been provided, use it
  CreateDmzWithInfra: !And
    - !Condition CreateDmzWithEnv
    - !Not
      - !Equals [ !Ref SgDmzInfra, '' ]

  # If access to the internet should be disabled, we should do this
  DisableInternetAccess: !And
    - !Condition CreateDmzWithEnv
    - !Equals [ !Ref FeatureInternetAccess, 'disabled' ]

  #----------------------------
  # Instance creation / configuration
  #----------------------------

  # Whether additional Security Groups have been specified (the join is necessary to transform the list to a string that we can compare)
  HasSecurityGroups: !Not
    - !Equals
      - !Join [ '', !Ref SecurityGroupIds ]
      - ''


################################################################################
#
# Resources (required)
# Declares the AWS resources that you want to include in the stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
#
################################################################################

Resources:
  #----------------------------
  # Security Groups
  #----------------------------

  # Attached to all instances
  SecurityGroupEnv:
    Condition: CreateDmzWithEnv
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'Rules for connections from and to all Instances in env ${RootStackName}-${Role}'
      Tags:
        - Key: 'Name'
          Value: !Sub '${RootStackName}-${Role}-sg-env'
      VpcId: !Ref VpcId

  # If internet access should be disabled, only allow traffic to the instances of this environment
  SecurityGroupEnvEgress:
    Condition: DisableInternetAccess
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: 'All Instances (DMZ)'
      DestinationSecurityGroupId: !Ref SecurityGroupEnv
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: '-1'

  # Allow ingress traffic from itself -> All instances can communicate with all instances attached to the same SG
  SecurityGroupEnvIngressFromSelf:
    Condition: CreateDmzWithEnv
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: 'All Instances (DMZ)'
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: '-1'
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  # INFRA DMZ: Allow incoming connections to AppEnvAem from hosts in the INFRA network
  SecurityGroupEnvIngressFromInfra:
    Condition: CreateDmzWithInfra
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Network INFRA"
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SgDmzInfra

  # INFRA DMZ: Allow incoming connections to hosts in the INFRA network from this AppEnv
  SecurityGroupInfraDmzIngressFromAppEnv:
    Condition: CreateDmzWithInfra
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: !Sub "${RootStackName}-${Role} AppEnvGeneric"
      GroupId: !Ref SgDmzInfra
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  #----------------------------
  # Host
  #----------------------------

  Host:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: '../../../resources/ec2/instance.yaml'
      Tags:
        - Key: 'role'
          Value: !Sub '${Role}'
      Parameters:
        # Naming details
        #
        NameSuffix: !Sub '${Role}'
        RootStackName: !Ref RootStackName

        # Instance configuration
        #
        AvailabilityZone: !Select [ '0', !Ref HostGroupsAvailabilityZones ]
        ImageId: !Ref ImageId
        InstanceProfile: !Ref InstanceProfile
        InstanceType: !Ref InstanceType
        RootKeyName: !Ref RootKeyName
        SecurityGroupIds: !Join
          - ','
          - - !If
              - CreateDmzWithEnv
              - !Ref SecurityGroupEnv
              - !Ref SgDmzVpc
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasSecurityGroups
              - !Join [ ',', !Ref SecurityGroupIds ]
              - !Ref AWS::NoValue
        SubnetId: !Select [ '0', !Ref HostGroupsSubnetIds ]

        # Additional features
        #
        FeatureAutoSnapshot: !Ref FeatureAutoSnapshot
        FeatureUptimeWindows: !Join [ ',', !Ref FeatureUptimeWindows ]

        # /opt (optional)
        #
        VolumeOptEncryption: !Ref FeatureVolumeEncryption
        VolumeOptIops: !Ref VolumeOptIops
        VolumeOptSize: !Ref VolumeOptSize
        VolumeOptType: !Ref VolumeOptType

        # /tmp (optional)
        #
        VolumeTmpEncryption: !Ref FeatureVolumeEncryption
        VolumeTmpIops: !Ref VolumeTmpIops
        VolumeTmpSize: !Ref VolumeTmpSize
        VolumeTmpType: !Ref VolumeTmpType

        # /var (optional)
        #
        VolumeVarEncryption: !Ref FeatureVolumeEncryption
        VolumeVarIops: !Ref VolumeVarIops
        VolumeVarSize: !Ref VolumeVarSize
        VolumeVarType: !Ref VolumeVarType

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName


################################################################################
#
# Outputs (optional)
# Declares output values that you can import into other stacks (to create cross-stack references)
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
################################################################################

Outputs:
  #=======================================
  # Instance / Host Group layer
  #=======================================

  SecurityGroupEnv:
    Condition: CreateDmzWithEnv
    Description: 'Security Group that is attached to all Instances in this environment.'
    Value: !Ref SecurityGroupEnv

AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS OpsWorks for Puppet Enterprise configuration management server.'

################################################################################
#
# Decision Trees: none
#
################################################################################


################################################################################
#
# Metadata (optional)
# provide details about the template
#
# See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
#
################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Naming details'
        Parameters:
          - RootStackName
      - Label:
          default: 'Environment configuration'
        Parameters:
          - RootKeyName
          - SgDmzVpc
          - VpcId
      - Label:
          default: 'Host Group 01'
        Parameters:
          - G01SubnetId
          - G01AvailabilityZone
      - Label:
          default: 'Puppetmaster'
        Parameters:
          - InstanceType
          - PuppetmasterInitialAdminPassword
          - PuppetmasterGitRepo
          - PuppetmasterGitSshKey
          - SecurityGroupIds
      - Label:
          default: 'DNS Record configuration (optional)'
        Parameters:
          - DnsServiceToken
          - HostedZoneName
          - TimeToLive


################################################################################
#
# Parameters (optional)
# Passes values into templates when creating a stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
################################################################################

Parameters:
  #=======================================
  # Naming details
  #=======================================

  RootStackName:
    Description: 'Name of the top-level stack to which this stack, if nested, ultimately belongs (this stacks name else).'
    Type: String

  #=======================================
  # Environment configuration
  #=======================================

  RootKeyName:
    Description: 'The name of the Amazon EC2 key pair that will be used to access the Instances via SSH.'
    Type: AWS::EC2::KeyPair::KeyName

  SgDmzVpc:
    Description: 'The ID of the SecurityGroup in the VPC that is used to create a DMZ within that VPC (optional).'
    Type: String
    Default: ''

  VpcId:
    Description: 'The ID of the VPC in which the targets are located.'
    Type: AWS::EC2::VPC::Id

  #=======================================
  # Host Group 01
  #=======================================

  G01SubnetId:
    Description: 'ID of the subnet the first set of application instances should be placed into.'
    Type: AWS::EC2::Subnet::Id

  G01AvailabilityZone:
    Description: 'AvailabilityZone of the subnet the first set of application instances should be placed into.'
    Type: AWS::EC2::AvailabilityZone::Name

  #=======================================
  # Puppetmaster
  #=======================================

  InstanceType:
    Description: 'The instance type for the Puppet Master Instance (examples: "t3a.micro" or "m5.xlarge").'
    Type: String
    Default: 'm4.large'

  PuppetmasterInitialAdminPassword:
    Description: 'The instance type for the Puppet Master Instance (examples: "t3a.micro" or "m5.xlarge").'
    Type: String

  PuppetmasterGitRepo:
    Description: 'The git-repository of your Puppet code. Can also be set up manually in the OpsWorks settings.'
    Type: String
    Default: ''

  PuppetmasterGitSshKey:
    Description: 'If the git-repository above is not open you can add a SSH Private key here to be able to get read-access. Do not use existing users, create one only for this and only with read permissions!'
    Type: String
    Default: ''

  SecurityGroupIds:
    Description: 'The Security Groups, identified by their IDs, that will be attached to the Instance.'
    Type: CommaDelimitedList
    Default: ''

  #=======================================
  # DNS Record configuration (optional)
  #=======================================

  DnsServiceToken:
    Description: 'The SNS Topic ARN or Lambda function ARN that was provided to access the service that manages remote DNS Records (only required if DNS Records are managed in a different account; must be from the same region as this stack).'
    Type: String
    Default: ''

  HostedZoneName:
    Description: 'The name of the domain for the Hosted Zone where the Record Sets should be added (if left empty, no DNS Record will be created; example: "my-project.example.com").'
    Type: String
    Default: ''

  TimeToLive:
    Description: 'The private DNS Records cache time to live (TTL), in seconds.'
    Type: Number
    Default: 300


################################################################################
#
# Conditions (optional)
# Includes statements that define when a resource is created or when a property is defined
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
#
################################################################################

Conditions:

  # To create the DNS updating Lambda, we need the name and ID of the Hosted Zone. If both are not given, we won't create the Lambda
  CreateDnsRecord: !Not
    - !Equals [ !Ref HostedZoneName, '' ]

  # If no Git repository was given, we can't configure it in the Puppet Master
  SetupGitRepo: !Not
    - !Equals [ !Ref PuppetmasterGitRepo, '' ]

  # If no SSH key was given, we can't configure it in the Puppet Master
  SetupGitSshKey: !Not
    - !Equals [ !Ref PuppetmasterGitSshKey, '' ]

  # If SgDmzVpc is not set we have to go with the environment specific SecurityGroup
  IsEnvDmz: !Equals [ !Ref SgDmzVpc, '' ]

  #----------------------------
  # Instance creation / configuration
  #----------------------------

  # Whether a additional Security Groups have been specified for Instance (the join is necessary to transform the list to a string that we can compare)
  HasSecurityGroups: !Not
    - !Equals
      - !Join [ '', !Ref SecurityGroupIds ]
      - ''


################################################################################
#
# Resources (required)
# Declares the AWS resources that you want to include in the stack
#
# Naming Conventions:
#  - Name attribute: !Sub '${RootStackName}-<identifier>'
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
#
################################################################################

Resources:
  #----------------------------
  # Security Groups
  #----------------------------

  # Attached to all OpsWorks instances, enables us to set up ingress rules with other SGs
  SecurityGroupEnv:
    Condition: IsEnvDmz
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Server security group. Managed by OpsWorks. Please do not edit/update/delete.
      Tags:
        - Key: 'Name'
          Value: !Sub '${RootStackName}-puppetmaster-sg-env'
      VpcId: !Ref VpcId

  # Allow ingress traffic from itself -> All instances can communicate with all instances attached to the same SG
  SecurityGroupEnvIngress:
    Condition: IsEnvDmz
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: 'All Instances (DMZ)'
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: '-1'
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  #=======================================
  # Puppet Master
  #=======================================

  #----------------------------
  # OpsWorks service resources
  #----------------------------

  PuppetOpsWorksCMServer:
    Type: 'AWS::OpsWorksCM::Server'
    Properties:
      # Disabled until there is time for a migration (according to the documentation this option likely will recreate the Puppet Master)
      AssociatePublicIpAddress: false
      BackupRetentionCount: 10
      DisableAutomatedBackup: false
      PreferredBackupWindow: '04:00'
      PreferredMaintenanceWindow: 'Fri:04:00'
      Engine: Puppet
      EngineVersion: 2017
      EngineAttributes:
        - Name: PUPPET_ADMIN_PASSWORD
          Value: !Ref PuppetmasterInitialAdminPassword
        - !If
          - SetupGitRepo
          - Name: PUPPET_R10K_REMOTE
            Value: !Ref PuppetmasterGitRepo
          - !Ref AWS::NoValue
        - !If
          - SetupGitSshKey
          - Name: PUPPET_R10K_PRIVATE_KEY
            Value: !Ref PuppetmasterGitSshKey
          - !Ref AWS::NoValue
      EngineModel: 'Monolithic'
      InstanceProfileArn: !GetAtt OpsWorksInstanceProfile.Arn
      InstanceType: !Ref InstanceType
      KeyPair: !Ref RootKeyName
      ServiceRoleArn: !GetAtt OpsWorksServiceRole.Arn
      SecurityGroupIds:
        - !If
          - IsEnvDmz
          - !GetAtt SecurityGroupEnv.GroupId
          - !Ref SgDmzVpc
        # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
        - !If
          - HasSecurityGroups
          - !Join [ ',', !Ref SecurityGroupIds ]
          - !Ref AWS::NoValue
      SubnetIds:
        - !Ref G01SubnetId

  OpsWorksInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
              ### for china this need to be changed to ec2.amazonaws.com.cn
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/AWSOpsWorksCMInstanceProfileRole
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      Path: /service-role/
      # needs to be the same as the co-responding InstanceProfile, for some mystic reason
      # the usual naming pattern of RootStackName as a prefix is applicable here, because role- & profile-names follow AWS patterns. Therefore using suffix
      RoleName: !Sub "aws-opsworks-cm-ec2-role-${RootStackName}-puppetmaster"

  # Attached to all opsworks instances
  OpsWorksInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      # needs to be the same as the co-responding role, for some mystic reason
      # the usual naming pattern of RootStackName as a prefix is applicable here, because role- & profile-names follow AWS patterns. Therefore using suffix
      InstanceProfileName: !Sub "aws-opsworks-cm-ec2-role-${RootStackName}-puppetmaster"
      Path: /
      Roles:
        - !Ref OpsWorksInstanceRole

  OpsWorksServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                ### for china this need to be changed to opsworks-cm.amazonaws.com.cn
                - opsworks-cm.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSOpsWorksCMServiceRole
      Path: /service-role/
      # the usual naming pattern of RootStackName as a prefix is applicable here, because role- & profile-names follow AWS patterns. Therefore using suffix
      RoleName: !Sub "aws-opsworks-cm-${RootStackName}-puppetmaster"

  #----------------------------
  # Puppet agent resources
  #----------------------------

  PuppetAgentInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - opsworks-cm:AssociateNode
            - opsworks-cm:DescribeNodeAssociationStatus
            - opsworks-cm:DescribeServers
            - ec2:DescribeTags
            - ec2:DescribeInstances
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: InstancePolicy
      # needs to be the same as the co-responding instance profile, for some mystic reason
      # the usual naming pattern of RootStackName as a prefix is applicable here, because role- & profile-names follow AWS patterns. Therefore using suffix
      RoleName: !Sub "aws-opsworks-cm-agent-ec2-role-${RootStackName}-puppetmaster"

  # Attached to all instances that pull from opsworks
  PuppetAgentInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      # needs to be the same as the co-responding instance profile, for some mystic reason
      # the usual naming pattern of RootStackName as a prefix is applicable here, because role- & profile-names follow AWS patterns. Therefore using suffix
      InstanceProfileName: !Sub "aws-opsworks-cm-agent-ec2-role-${RootStackName}-puppetmaster"
      Path: /
      Roles:
      - Ref: PuppetAgentInstanceRole

  #=======================================
  # Route 53 DNS Records
  #=======================================

  # The optional DNS Record for the LB
  DnsRecords:
    Condition: CreateDnsRecord
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: '../../../resources/r53/dns-records.yaml'
      Parameters:
        # DNS Record configuration
        #
        DnsName: !Sub '${RootStackName}-puppetmaster'
        HostedZoneName: !Ref HostedZoneName
        Target: !GetAtt PuppetOpsWorksCMServer.Endpoint
        TimeToLive: 300
        Type: 'CNAME'

        # Remote DNS Record configuration (optional)
        #
        ServiceToken: !Ref DnsServiceToken


################################################################################
#
# Outputs (optional)
# Declares output values that you can import into other stacks (to create cross-stack references)
#
# Naming Conventions:
#  - Logical ID: <same-ID-that-was-used-for-the-resource>
#  - Export Name: <same-name-that-was-used-for-the-resource>
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
################################################################################

Outputs:

  # for the OpsWorks service
  #
  SecurityGroupEnv:
    Condition: IsEnvDmz
    Description: 'Security Group that is attached to all Puppet Master Instances.'
    Value: !Ref SecurityGroupEnv

  PuppetOpsWorksCMServer:
    Description: 'OpsWorksCM Server ID.'
    Value: !Ref PuppetOpsWorksCMServer

  # for the Puppet agent
  #
  PuppetAgentInstanceProfile:
    Description: 'Instance Profile ARN for EC2 instances that need to connect to the PM.'
    Value: !Ref PuppetAgentInstanceProfile

AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation IaC --- AWS OpsWorks for Puppet Enterprise configuration management server."

################################################################################
#
# Decision Trees:
#
#   DNS entries:
#     HostedZoneName != ""
#       true  -> Created
#       false -> None [default]
#
################################################################################


################################################################################
#
# Metadata (optional)
# provide details about the template
#
# See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
#
################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "Naming details"
      Parameters:
      - Designation
      - RootStackName
    - Label:
        default: "Environment configuration"
      Parameters:
      - RootKeyName
      - SgDmzVpc
      - VpcId
    - Label:
        default: "Host Groups"
      Parameters:
      - HostGroupsSubnetIds
    - Label:
        default: "Puppet Master"
      Parameters:
      - BackupRetentionCount
      - GitRepo
      - GitSshKey
      - InitialAdminPassword
      - InstanceType
      - ManagedAccounts
      - PreferredBackupWindow
      - PreferredMaintenanceWindow
      - SecurityGroupIds
    - Label:
        default: "DNS Record configuration (optional)"
      Parameters:
      - DnsServiceToken
      - HostedZoneName
      - TimeToLive


################################################################################
#
# Parameters (optional)
# Passes values into templates when creating a stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
################################################################################

Parameters:
  #=======================================
  # Naming details
  #=======================================

  Designation:
    Description: "A string used to tell the resources created by different instances of this stack apart (for example its purpose or just a number)."
    Type: String
    Default: "puppet"

  RootStackName:
    Description: "Name of the top-level stack to which this stack, if nested, ultimately belongs (this stacks name else)."
    Type: String

  #=======================================
  # Environment configuration
  #=======================================

  RootKeyName:
    Description: "The name of the Amazon EC2 key pair that will be used to access the Instances via SSH."
    Type: AWS::EC2::KeyPair::KeyName

  SgDmzVpc:
    Description: "The ID of the SecurityGroup in the VPC that is used to create a DMZ within that VPC (optional)."
    Type: String
    Default: ""

  VpcId:
    Description: "The ID of the VPC in which the targets are located."
    Type: AWS::EC2::VPC::Id

  #=======================================
  # Host Groups
  #=======================================

  HostGroupsSubnetIds:
    Description: "The IDs of the Subnets, the application instances should be placed into (example: \"subnet-1234567890abcdefg, subnet-abcdefg1234567890, subnet-12345abcdefg67890\")."
    Type: CommaDelimitedList

  #=======================================
  # Puppet Master
  #=======================================

  BackupRetentionCount:
    Description: "The number of automated backups that you want to keep. Whenever a new backup is created, AWS OpsWorks CM deletes the oldest backups if this number is exceeded. Setting this to 0 disables automatic backups."
    Type: Number
    Default: 10

  GitRepo:
    Description: "The URL of your Puppet control repository (must be Git). Can also be set up manually in the OpsWorks settings."
    Type: String
    Default: ""

  GitSshKey:
    Description: "A PEM-encoded private SSH key for read-access, if GitRepo is private."
    Type: String
    Default: ""

  InitialAdminPassword:
    Description: "The initial password to work with the Puppet Enterprise console (must use ASCII characters)."
    Type: String

  InstanceType:
    Description: "The instance type for the Puppet Master Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "m4.large"

  ManagedAccounts:
    Description: "A list of AWS accounts that contain hosts that should be managed by this Puppet Master Instance (e.g. \"1234567890, 987654321098\")."
    Type: CommaDelimitedList
    Default: ""

  PreferredBackupWindow:
    Description: "The start time for a one-hour period during which AWS OpsWorks CM backs up application-level data on your server, in the format \"HH:MM\" or \"DDD:HH:MM\" (examples: \"08:00\", \"Mon:08:00\")."
    Type: String
    Default: "04:00"

  PreferredMaintenanceWindow:
    Description: "The start time for a one-hour period each week during which AWS OpsWorks CM performs maintenance on the instance, in the following format \"DDD:HH:MM\" (MM must be specified as 00; example: \"Mon:08:00\")."
    Type: String
    Default: "Fri:04:00"

  SecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance."
    Type: CommaDelimitedList
    Default: ""

  #=======================================
  # DNS Record configuration (optional)
  #=======================================

  DnsServiceToken:
    Description: "The SNS Topic ARN or Lambda function ARN that was provided to access the service that manages remote DNS Records (only required if DNS Records are managed in a different account; must be from the same region as this stack)."
    Type: String
    Default: ""

  HostedZoneName:
    Description: "The name of the domain for the Hosted Zone where the Record Sets should be added (if left empty, no DNS Record will be created; example: \"my-project.example.com\")."
    Type: String
    Default: ""

  TimeToLive:
    Description: "The private DNS Records cache time to live (TTL), in seconds."
    Type: Number
    Default: 300


################################################################################
#
# Conditions (optional)
# Includes statements that define when a resource is created or when a property is defined
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
#
################################################################################

Conditions:

  # If BackupRetentionCount has been set to 0, backups will be disabled
  HasNoBackupRetentionCount: !Equals [ !Ref BackupRetentionCount, 0 ]

  # To create the DNS updating Lambda, we need the name and ID of the Hosted Zone. If both are not given, we won't create the Lambda
  CreateDnsRecord: !Not
    - !Equals [ !Ref HostedZoneName, "" ]

  # If no accounts have been specified, we don't need to create the required resources
  HasManagedAccounts: !Not
    - !Equals
      - !Join [ "", !Ref ManagedAccounts ]
      - ""

  # If SgDmzVpc is not set we have to go with the environment specific SecurityGroup
  IsEnvDmz: !Equals [ !Ref SgDmzVpc, "" ]

  # If no Git repository was given, we can't configure it in the Puppet Master
  SetupGitRepo: !Not
    - !Equals [ !Ref GitRepo, "" ]

  # If no SSH key was given, we can't configure it in the Puppet Master
  SetupGitSshKey: !Not
    - !Equals [ !Ref GitSshKey, "" ]

  #----------------------------
  # Instance creation / configuration
  #----------------------------

  # Whether a additional Security Groups have been specified for Instance (the join is necessary to transform the list to a string that we can compare)
  HasSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref SecurityGroupIds ]
      - ""


################################################################################
#
# Resources (required)
# Declares the AWS resources that you want to include in the stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
#
################################################################################

Resources:
  #----------------------------
  # Security Groups
  #----------------------------

  # Attached to all OpsWorks instances, enables us to set up ingress rules with other SGs
  SecurityGroupEnv:
    Condition: IsEnvDmz
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Server security group. Managed by OpsWorks. Please do not edit/update/delete."
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-${Designation}-sg-env"
      VpcId: !Ref VpcId

  # Allow ingress traffic from itself -> All instances can communicate with all instances attached to the same SG
  SecurityGroupEnvIngress:
    Condition: IsEnvDmz
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "All Instances (DMZ)"
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  #----------------------------
  # OpsWorks service resources
  #----------------------------

  PuppetOpsWorksCMServer:
    Type: AWS::OpsWorksCM::Server
    Properties:
      AssociatePublicIpAddress: false
      BackupRetentionCount: !Ref BackupRetentionCount
      DisableAutomatedBackup: !If
        - HasNoBackupRetentionCount
        - true
        - false
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      Engine: "Puppet"
      EngineVersion: "2017"
      EngineAttributes:
      - Name: "PUPPET_ADMIN_PASSWORD"
        Value: !Ref InitialAdminPassword
      - !If
        - SetupGitRepo
        - Name: "PUPPET_R10K_REMOTE"
          Value: !Ref GitRepo
        - !Ref AWS::NoValue
      - !If
        - SetupGitSshKey
        - Name: "PUPPET_R10K_PRIVATE_KEY"
          Value: !Ref GitSshKey
        - !Ref AWS::NoValue
      EngineModel: "Monolithic"
      InstanceProfileArn: !GetAtt OpsWorksInstanceProfile.Arn
      InstanceType: !Ref InstanceType
      KeyPair: !Ref RootKeyName
      ServiceRoleArn: !GetAtt OpsWorksServiceRole.Arn
      SecurityGroupIds:
      - !If
        - IsEnvDmz
        - !GetAtt SecurityGroupEnv.GroupId
        - !Ref SgDmzVpc
      # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
      - !If
        - HasSecurityGroups
        - !Join [ ",", !Ref SecurityGroupIds ]
        - !Ref AWS::NoValue
      SubnetIds: !Ref HostGroupsSubnetIds

  # See: https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml
  OpsWorksInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
            ### for china this need to be changed to ec2.amazonaws.com.cn
            - "ec2.amazonaws.com"
        Version: "2012-10-17"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
      - "arn:aws:iam::aws:policy/AWSOpsWorksCMInstanceProfileRole"
      # Must be set and begin with "aws-opsworks-cm-", or the AWS::OpsWorksCM::Server resource will fail with "API: ec2:RunInstances You are not authorized to perform this operation."
      RoleName: !Sub "aws-opsworks-cm-${AWS::StackName}"

  # See: https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml
  OpsWorksInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref OpsWorksInstanceRole

  # See: https://s3.amazonaws.com/opsworks-cm-us-east-1-prod-default-assets/misc/opsworks-cm-roles.yaml
  OpsWorksServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
            ### for china this need to be changed to opsworks-cm.amazonaws.com.cn
            - "opsworks-cm.amazonaws.com"
        Version: "2012-10-17"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSOpsWorksCMServiceRole"

  #----------------------------
  # Puppet agent resources
  #----------------------------

  NodePolicyAllowAssociation:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Allow the owners of this Policy to interact with the Puppet Master (find, retrieve information and associate) and retrieve information about EC2 Tags and Instances."
      PolicyDocument:
        Statement:
        - Action:
          - "opsworks-cm:AssociateNode"
          - "opsworks-cm:DescribeNodeAssociationStatus"
          - "opsworks-cm:DescribeServers"
          - "ec2:DescribeTags"
          - "ec2:DescribeInstances"
          Effect: "Allow"
          Resource: "*"
        Version: "2012-10-17"

  NodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
            AWS: !If
              - HasManagedAccounts
              - !Ref ManagedAccounts
              - !Ref AWS::NoValue
        Version: "2012-10-17"
      Description: "Role to allow the AWS EC2 service to interact with an OpsWorksCM Server."
      # Allow the EC2 service and specified AWS accounts to assume this role
      ManagedPolicyArns:
      - !Ref NodePolicyAllowAssociation

  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref NodeRole

  #=======================================
  # Route 53 DNS Records
  #=======================================

  # The optional DNS Record for the LB
  DnsRecords:
    Condition: CreateDnsRecord
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "../../../resources/r53/dns-records.yaml"
      Parameters:
        # DNS Record configuration
        #
        DnsName: !Ref Designation
        HostedZoneName: !Ref HostedZoneName
        Target: !GetAtt PuppetOpsWorksCMServer.Endpoint
        TimeToLive: !Ref TimeToLive
        Type: "CNAME"

        # Remote DNS Record configuration (optional)
        #
        ServiceToken: !Ref DnsServiceToken


################################################################################
#
# Outputs (optional)
# Declares output values that you can import into other stacks (to create cross-stack references)
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
################################################################################

Outputs:
  # For the Puppet Master
  #
  SecurityGroupEnv:
    Condition: IsEnvDmz
    Description: "The Security Group that is attached to all Instances of this Puppet Master environment."
    Value: !Ref SecurityGroupEnv

  PuppetOpsWorksCMServer:
    Description: "The ID of the OpsWorksCM server (used to identify this server)."
    Value: !Ref PuppetOpsWorksCMServer

  PuppetOpsWorksCMServerEndpoint:
    Description: "A DNS name that can be used to access the Puppet Master (example: \"myserver-asdfghjkl.us-east-1.opsworks.io\")."
    Value: !GetAtt PuppetOpsWorksCMServer.Endpoint

  # For Puppet Nodes
  #
  NodeInstanceProfile:
    Description: "The name of the local IAM InstanceProfile that needs to be attached to EC2 Instances to enable them to interact with this Puppet Master."
    Value: !Ref NodeInstanceProfile

  NodePolicies:
    Description: "The ARNs of the IAM Managed Policies that need to be assigned to EC2 Instances to enable them to interact with the remote Puppet Master."
    Value: !Ref NodePolicyAllowAssociation

  NodeRole:
    Description: "The ARN of the local IAM Role that needs to be assumed by EC2 Instances to enable them to interact with this Puppet Master."
    Value: !GetAtt NodeRole.Arn

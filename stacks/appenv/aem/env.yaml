AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation IaC --- Environment with one Author and up to three Publish Instances, each in a different Availability Zone"

################################################################################
#
# Decision Trees:
#
#   Dispatcher:
#     DispatcherImageId != ""
#       true  -> Dispatcher Instance: Created
#             -> SG attached to: <DispatcherInstance>
#       false -> Dispatcher Instance: None [default]
#             -> SG attached to: <Instance>
#
#   DNS entries:
#     HostedZoneName != ""
#       true  -> Created
#       false -> None [default]
#
#   Host Groups:
#     G<XX>SubnetId != "" && G<XX>AvailabilityZone != ""
#       true  -> Created
#       false -> None [default]
#
#   LB and related SG:
#     LbVisibility == "none"
#       false -> None created
#     LbVisibility == "private"
#       true  -> Created with private DNS [default]
#     LbVisibility == "public"
#       true  -> Created with private and public DNS
#
#   LB protocols:
#     LbHttpPort != 0
#       true  -> Enabled [default]
#       false -> Disabled
#     LbHttpsPort != 0
#       true  -> Enabled
#       false -> Disabled [default]
#
################################################################################


################################################################################
#
# Metadata (optional)
# provide details about the template
#
# See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
#
################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "Naming details"
      Parameters:
      - RootStackName
    - Label:
        default: "Environment configuration"
      Parameters:
      - HostNameSuffix
      - IamInstanceProfile
      - IamManagedPolicies
      - RootKeyName
      - SgDmzMgmt
      - VpcId
    - Label:
        default: "Additional features"
      Parameters:
      - FeatureAutoSnapshot
      - FeatureInternetAccess
      - FeatureUptimeWindows
      - FeatureVolumeEncryption
    - Label:
        default: "Load Balancer"
      Parameters:
      - LbAllowAllTraffic
      - LbDeregistrationDelay
      - LbEnableHttp2
      - LbHealthCheckInterval
      - LbHealthCheckPath
      - LbHealthCheckProtocol
      - LbHealthCheckTimeout
      - LbHealthyStatusCode
      - LbHealthyThresholdCount
      - LbHttpPort
      - LbHttpsPort
      - LbSecurityGroupIds
      - LbStickinessDuration
      - LbSubnetIds
      - LbTargetPort
      - LbTargetProtocol
      - LbTimeToLive
      - LbUnhealthyThresholdCount
      - LbVisibility
    - Label:
        default: "Load Balancer - Author (optional)"
      Parameters:
      - LbAuthorSslCertificateArn
    - Label:
        default: "Load Balancer - Publish (optional)"
      Parameters:
      - LbPublishSslCertificateArn
    - Label:
        default: "Host Groups"
      Parameters:
      - HostGroupsAvailabilityZones
      - HostGroupsCount
      - HostGroupsSubnetIds
    - Label:
        default: "Author"
      Parameters:
      - AuthorDesignation
      - AuthorImageId
      - AuthorInstanceType
      - AuthorRootDeviceName
      - AuthorRootDeviceIops
      - AuthorRootDeviceSize
      - AuthorRootDeviceType
      - AuthorSecurityGroupIds
      - AuthorVolumeOptIops
      - AuthorVolumeOptSize
      - AuthorVolumeOptThroughput
      - AuthorVolumeOptType
      - AuthorVolumeTmpIops
      - AuthorVolumeTmpSize
      - AuthorVolumeTmpThroughput
      - AuthorVolumeTmpType
      - AuthorVolumeVarIops
      - AuthorVolumeVarSize
      - AuthorVolumeVarThroughput
      - AuthorVolumeVarType
    - Label:
        default: "Author Dispatcher (optional)"
      Parameters:
      - AuthorDispatcherDesignation
      - AuthorDispatcherImageId
      - AuthorDispatcherInstanceType
      - AuthorDispatcherRootDeviceName
      - AuthorDispatcherRootDeviceIops
      - AuthorDispatcherRootDeviceSize
      - AuthorDispatcherRootDeviceType
      - AuthorDispatcherSecurityGroupIds
      - AuthorDispatcherVolumeVarIops
      - AuthorDispatcherVolumeVarSize
      - AuthorDispatcherVolumeVarThroughput
      - AuthorDispatcherVolumeVarType
    - Label:
        default: "Publish"
      Parameters:
      - PublishDesignation
      - PublishImageId
      - PublishInstanceType
      - PublishRootDeviceName
      - PublishRootDeviceIops
      - PublishRootDeviceSize
      - PublishRootDeviceType
      - PublishSecurityGroupIds
      - PublishVolumeOptIops
      - PublishVolumeOptSize
      - PublishVolumeOptThroughput
      - PublishVolumeOptType
      - PublishVolumeTmpIops
      - PublishVolumeTmpSize
      - PublishVolumeTmpThroughput
      - PublishVolumeTmpType
      - PublishVolumeVarIops
      - PublishVolumeVarSize
      - PublishVolumeVarThroughput
      - PublishVolumeVarType
    - Label:
        default: "Publish Dispatcher (optional)"
      Parameters:
      - PublishDispatcherDesignation
      - PublishDispatcherImageId
      - PublishDispatcherInstanceType
      - PublishDispatcherRootDeviceName
      - PublishDispatcherRootDeviceIops
      - PublishDispatcherRootDeviceSize
      - PublishDispatcherRootDeviceType
      - PublishDispatcherSecurityGroupIds
      - PublishDispatcherVolumeVarIops
      - PublishDispatcherVolumeVarSize
      - PublishDispatcherVolumeVarThroughput
      - PublishDispatcherVolumeVarType
    - Label:
        default: "DNS Record configuration (optional)"
      Parameters:
      - DnsServiceToken
      - HostedZoneName


################################################################################
#
# Parameters (optional)
# Passes values into templates when creating a stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
################################################################################

Parameters:
  #=======================================
  # Naming details
  #=======================================

  RootStackName:
    Description: "Name of the top-level stack to which this stack, if nested, ultimately belongs (this stacks name else)."
    Type: String

  #=======================================
  # Environment configuration
  #=======================================

  HostNameSuffix:
    Description: "A string that will be appended to the designation string of all Instances, creating their host name (examples: \".dev\", \".assets.uat\")."
    Type: String
    Default: ""

  IamInstanceProfile:
    Description: "The ARN of an IAM Instance Profile that is used to grant permissions to the EC2 Instances of this environment (takes precedence over IamManagedPolicies)."
    Type: String
    Default: ""

  IamManagedPolicies:
    Description: "The ARNs of IAM Managed Policies that are used to grant permissions to the EC2 Instances of this environment (will be used to create an Instance Profile, if IamInstanceProfile has not been specified)."
    Type: CommaDelimitedList
    Default: ""

  RootKeyName:
    Description: "The name of the Amazon EC2 key pair that will be used to access the Instances via SSH."
    Type: AWS::EC2::KeyPair::KeyName

  SgDmzMgmt:
    Description: "The Security Group used to create a DMZ with all hosts in a central Management VPC (optional)"
    Type: String
    Default: ""

  VpcId:
    Description: "The ID of the VPC in which the targets are located."
    Type: AWS::EC2::VPC::Id

  #=======================================
  # Additional features
  #=======================================

  FeatureAutoSnapshot:
    Description: "Whether EBS Volumes should be backed up automatically not. This feature can be enabled by specifying a ScheduleName that was used with the \"automatic-snapshots\" template (examples: \"Daily\")."
    Type: String
    Default: "disabled"

  FeatureInternetAccess:
    Description: "Whether access to the internet should be possible for Instances in this environment."
    Type: String
    AllowedValues: [ "disabled", "enabled" ]
    Default: "enabled"

  FeatureUptimeWindows:
    Description: "A list consisting of two elements in the UNIX cron format, the first representing the start and the second the stop times. If set to \"disabled\", the instances will run 24/7 (example: \"* 4 ? * MON-FRI *\", \"* 20 ? * MON-FRI *\")."
    Type: CommaDelimitedList
    Default: "disabled"

  FeatureVolumeEncryption:
    Description: "Whether all Volumes of all Instance should be encrypted or not."
    Type: String
    AllowedValues: [ "false", "true" ]
    Default: "false"

  #=======================================
  # Load Balancer
  #=======================================

  LbAllowAllTraffic:
    Description: "Whether the Load Balancer should permit TCP or UDP flows for all traffic (0.0.0.0/0) in both directions for all ports (0-65535) or not."
    Type: String
    AllowedValues: [ "true", "false" ]
    Default: "true"

  LbDeregistrationDelay:
    Description: "The amount of time, in seconds, for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused (0 to 3600)."
    Type: Number
    Default: 300

  LbEnableHttp2:
    Description: "Whether HTTP/2 should be enabled or disabled. If disabled, HTTP1.1 will be used exclusively."
    Type: String
    AllowedValues: [ "false", "true" ]
    Default: "true"

  LbHealthCheckInterval:
    Description: "The approximate number of seconds between health checks for an individual target."
    Type: Number
    Default: 15

  LbHealthCheckPath:
    Description: "The destination for health checks on the targets."
    Type: String
    Default: "/"

  LbHealthCheckProtocol:
    Description: "The protocol the load balancer uses when performing health checks on targets."
    Type: String
    AllowedValues: [ "HTTP", "HTTPS" ]
    Default: "HTTP"

  LbHealthCheckTimeout:
    Description: "The amount of time, in seconds, during which no response from a target means a failed health check."
    Type: Number
    Default: 5

  LbHealthyStatusCode:
    Description: "The HTTP codes that a healthy target must use when responding to a health check (examples: \"200\" or \"200-399\")."
    Type: String
    Default: "200"

  LbHealthyThresholdCount:
    Description: "The number of consecutive health checks successes required before considering an unhealthy target healthy."
    Type: Number
    Default: 5

  LbHttpPort:
    Description: "The port on which the Load Balancer listens for HTTP requests (if zero, HTTP will be disabled)."
    Type: Number
    Default: 80

  LbHttpsPort:
    Description: "The port on which the Load Balancer listens for HTTPS requests (if zero, HTTPS will be disabled). When set, LbAuthorSslCertificateArn and LbPublishSslCertificateArn need to be set too."
    Type: Number
    Default: 0

  LbSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Load Balancers."
    Type: CommaDelimitedList
    Default: ""

  LbStickinessDuration:
    Description: "The time period, in seconds, during which requests from a client should be routed to the same target (0 to 604800)."
    Type: Number
    Default: 0

  LbSubnetIds:
    Description: "The IDs of the Subnets that will be attached to the Load Balancer (required if LbVisibility is not \"none\")."
    Type: CommaDelimitedList
    Default: ""

  LbTargetPort:
    Description: "The port to which the Load Balancer will send traffic to its targets."
    Type: Number
    Default: 80

  LbTargetProtocol:
    Description: "The port on which the Target Group should be created."
    Type: String
    AllowedValues: [ "HTTP", "HTTPS" ]
    Default: "HTTP"

  LbTimeToLive:
    Description: "The DNS Records cache time to live (TTL), in seconds, for the Load Balancers."
    Type: Number
    Default: 300

  LbUnhealthyThresholdCount:
    Description: "The number of consecutive health check failures required before considering a target unhealthy."
    Type: Number
    Default: 2

  LbVisibility:
    Description: "Whether the Load Balancers should be accessible from the internet, only from the VPC or nonexistent at all."
    Type: String
    AllowedValues: [ "none", "private", "public" ]
    Default: "private"

  #=======================================
  # Load Balancer - Author (optional)
  #=======================================

  LbAuthorSslCertificateArn:
    Description: "The Amazon Resource Name (ARN) of the certificate to associate with the Author LBs HTTPS Listener."
    Type: String
    Default: ""

  #=======================================
  # Load Balancer - Author (optional)
  #=======================================

  LbPublishSslCertificateArn:
    Description: "The Amazon Resource Name (ARN) of the certificate to associate with the Publish LBs HTTPS Listener."
    Type: String
    Default: ""

  #=======================================
  # Host Groups
  #=======================================

  HostGroupsAvailabilityZones:
    Description: "The names of the Availability Zones containing the Subnets specified in HostGroupsSubnetIds. Must be as many items as specified in \"HostGroupsCount\" (example: \"eu-central-1a, eu-central-1b, eu-central-1c\")."
    Type: CommaDelimitedList

  HostGroupsCount:
    Description: "The number of Host Groups that should be created (max: 3)."
    Type: Number
    AllowedValues: [ 1, 2, 3 ]

  HostGroupsSubnetIds:
    Description: "The IDs of the Subnets, the application instances should be placed into. Must be as many items as specified in \"HostGroupsCount\" (example: \"subnet-1234567890abcdefg, subnet-abcdefg1234567890, subnet-12345abcdefg67890\")."
    Type: CommaDelimitedList

  #=======================================
  # AEM Author
  #=======================================

  AuthorDesignation:
    Description: "A string that will be used to represent the Author Instance, for example in its host and DNS name."
    Type: String
    Default: ""

  AuthorImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Author Instance will be created from."
    Type: AWS::EC2::Image::Id

  AuthorInstanceType:
    Description: "The instance type for the Author Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "m5a.xlarge"

  AuthorRootDeviceName:
    Description: "The root device name set by the AMI of the Author Instance (example: \"/dev/sda1\")."
    Type: String
    Default: ""

  AuthorRootDeviceIops:
    Description: "The number of I/O operations per second (IOPs) of the root Volume of the Author Instance."
    Type: Number
    Default: 0

  AuthorRootDeviceSize:
    Description: "The size of the root Volume of the Author Instance, in gibibytes."
    Type: Number
    Default: 0

  AuthorRootDeviceType:
    Description: "The type of the root Volume of the Author Instance."
    Type: String
    AllowedValues: [ "", "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: ""

  AuthorSecurityGroupIds:
    Description: "A list that contains the IDs for VPC Security Groups to assign to the Author Instance."
    Type: CommaDelimitedList
    Default: ""

  AuthorSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Author."
    Type: CommaDelimitedList
    Default: ""

  AuthorVolumeOptIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/opt\" Volume of the Author Instance will support (only used if AuthorVolumeOptType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeOptSize:
    Description: "The size of the \"/opt\" Volume of the Author Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorVolumeOptThroughput:
    Description: "The throughput of the \"/opt\" Volume of the Author Instance, in MiB/s (only used if AuthorVolumeOptType is set to \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeOptType:
    Description: "The Volume type of the \"/opt\" Volume of the Author Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorVolumeOptIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  AuthorVolumeTmpIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/tmp\" Volume of the Author Instance will support (only used if AuthorVolumeTmpType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeTmpSize:
    Description: "The size of the \"/tmp\" Volume of the Author Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorVolumeTmpThroughput:
    Description: "The throughput of the \"/tmp\" Volume of the Author Instance, in MiB/s (only used if AuthorVolumeTmpType is set to \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeTmpType:
    Description: "The Volume type of the \"/tmp\" Volume of the Author Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorVolumeTmpIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  AuthorVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Author Instance will support (only used if AuthorVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Author Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorVolumeVarThroughput:
    Description: "The throughput of the \"/var\" Volume of the Author Instance, in MiB/s (only used if AuthorVolumeVarType is set to \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Author Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # Author Dispatcher (optional)
  #=======================================

  AuthorDispatcherDesignation:
    Description: "A string that will be used to represent the Author Dispatcher Instance, for example in its host and DNS name."
    Type: String
    Default: ""

  AuthorDispatcherImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Author Dispatcher Instance will be created from (if this value is empty the Instance will not be created)."
    Type: String
    Default: ""

  AuthorDispatcherInstanceType:
    Description: "The instance type for the Author Dispatcher Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "t3.medium"

  AuthorDispatcherRootDeviceName:
    Description: "The root device name set by the AMI of the Author Dispatcher Instance (example: \"/dev/sda1\")."
    Type: String
    Default: ""

  AuthorDispatcherRootDeviceIops:
    Description: "The number of I/O operations per second (IOPs) of the root Volume of the Author Dispatcher Instance."
    Type: Number
    Default: 0

  AuthorDispatcherRootDeviceSize:
    Description: "The size of the root Volume of the Author Dispatcher Instance, in gibibytes."
    Type: Number
    Default: 0

  AuthorDispatcherRootDeviceType:
    Description: "The type of the root Volume of the Author Dispatcher Instance."
    Type: String
    AllowedValues: [ "", "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: ""

  AuthorDispatcherSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Author Dispatcher."
    Type: CommaDelimitedList
    Default: ""

  AuthorDispatcherVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Author Dispatcher Instance will support (only used if AuthorDispatcherVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorDispatcherVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Author Dispatcher Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorDispatcherVolumeVarThroughput:
    Description: "The throughput of the \"/var\" Volume of the Author Dispatcher Instance, in MiB/s (only used if AuthorDispatcherVolumeVarType is set to \"gp3\")."
    Type: Number
    Default: 0

  AuthorDispatcherVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Author Dispatcher Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorDispatcherVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # AEM Publish
  #=======================================

  PublishDesignation:
    Description: "A string that will be used to represent the Publish Instance, for example in its host and DNS name."
    Type: String
    Default: ""

  PublishImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Publish Instance will be created from."
    Type: AWS::EC2::Image::Id

  PublishInstanceType:
    Description: "The instance type for the Publish Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "m5a.large"

  PublishRootDeviceName:
    Description: "The root device name set by the AMI of the Publish Instance (example: \"/dev/sda1\")."
    Type: String
    Default: ""

  PublishRootDeviceIops:
    Description: "The number of I/O operations per second (IOPs) of the root Volume of the Publish Instance."
    Type: Number
    Default: 0

  PublishRootDeviceSize:
    Description: "The size of the root Volume of the Publish Instance, in gibibytes."
    Type: Number
    Default: 0

  PublishRootDeviceType:
    Description: "The type of the root Volume of the Publish Instance."
    Type: String
    AllowedValues: [ "", "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: ""

  PublishSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Publisher."
    Type: CommaDelimitedList
    Default: ""

  PublishVolumeOptIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/opt\" Volume of the Publish Instance will support (only used if PublishVolumeOptType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeOptSize:
    Description: "The size of the \"/opt\" Volume of the Publish Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishVolumeOptThroughput:
    Description: "The throughput of the \"/opt\" Volume of the Publish Instance, in MiB/s (only used if PublishVolumeOptType is set to \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeOptType:
    Description: "The Volume type of the \"/opt\" Volume of the Publish Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishVolumeOptIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  PublishVolumeTmpIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/tmp\" Volume of the Publish Instance will support (only used if PublishVolumeTmpType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeTmpSize:
    Description: "The size of the \"/tmp\" Volume of the Publish Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishVolumeTmpThroughput:
    Description: "The throughput of the \"/tmp\" Volume of the Publish Instance, in MiB/s (only used if PublishVolumeTmpType is set to \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeTmpType:
    Description: "The Volume type of the \"/tmp\" Volume of the Publish Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishVolumeTmpIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  PublishVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Publish Instance will support (only used if PublishVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Publish Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishVolumeVarThroughput:
    Description: "The throughput of the \"/var\" Volume of the Publish Instance, in MiB/s (only used if PublishVolumeVarType is set to \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Publish Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # Publish Dispatcher (optional)
  #=======================================

  PublishDispatcherDesignation:
    Description: "A string that will be used to represent the Publish Dispatcher Instance, for example in its host and DNS name."
    Type: String
    Default: ""

  PublishDispatcherImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Publish Dispatcher Instance will be created from (if this value is empty the Instance will not be created)."
    Type: String
    Default: ""

  PublishDispatcherInstanceType:
    Description: "The instance type for the Publish Dispatcher Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "t3.medium"

  PublishDispatcherRootDeviceName:
    Description: "The root device name set by the AMI of the Publish Dispatcher Instance (example: \"/dev/sda1\")."
    Type: String
    Default: ""

  PublishDispatcherRootDeviceIops:
    Description: "The number of I/O operations per second (IOPs) of the root Volume of the Publish Dispatcher Instance."
    Type: Number
    Default: 0

  PublishDispatcherRootDeviceSize:
    Description: "The size of the root Volume of the Publish Dispatcher Instance, in gibibytes."
    Type: Number
    Default: 0

  PublishDispatcherRootDeviceType:
    Description: "The type of the root Volume of the Publish Dispatcher Instance."
    Type: String
    AllowedValues: [ "", "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: ""

  PublishDispatcherSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Publish Dispatcher."
    Type: CommaDelimitedList
    Default: ""

  PublishDispatcherVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Publish Dispatcher Instance will support (only used if PublishDispatcherVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishDispatcherVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Publish Dispatcher Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishDispatcherVolumeVarThroughput:
    Description: "The throughput of the \"/var\" Volume of the Publish Dispatcher Instance, in MiB/s (only used if PublishDispatcherVolumeVarType is set to \"gp3\")."
    Type: Number
    Default: 0

  PublishDispatcherVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Publish Dispatcher Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishDispatcherVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # DNS Record configuration (optional)
  #=======================================

  DnsServiceToken:
    Description: "The SNS Topic ARN or Lambda function ARN that was provided to access the service that manages remote DNS Records (only required if DNS Records are managed in a different account; must be from the same region as this stack)."
    Type: String
    Default: ""

  HostedZoneName:
    Description: "The name of the domain for the Hosted Zone where the DNS Record Sets should be added (if left empty, no DNS Record will be created; example: \"my-project.example.com\")."
    Type: String
    Default: ""


################################################################################
#
# Conditions (optional)
# Includes statements that define when a resource is created or when a property is defined
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
#
################################################################################

Conditions:
  #----------------------------
  # Network
  #----------------------------

  # If a Security Group for a DMZ with a central Management VPC has been provided, use it
  CreateDmzWithMgmt: !Not
    - !Equals [ !Ref SgDmzMgmt, "" ]

  # If access to the internet should be disabled, we should do this
  DisableInternetAccess: !Equals [ !Ref FeatureInternetAccess, "disabled" ]

  #----------------------------
  # Host Group creation / configuration
  #----------------------------

  # Whether a second Host Group should be created
  CreateHostGroup2: !Or
    - !Equals [ !Ref HostGroupsCount, 2 ]
    - !Condition CreateHostGroup3

  # Whether a third Host Group should be created
  CreateHostGroup3: !Equals [ !Ref HostGroupsCount, 3 ]

  #----------------------------
  # Instance creation / configuration
  #----------------------------

  # Whether a dedicated Author Dispatcher Instance should be created
  CreateAuthorDispatcherInstance: !Not
    - !Equals [ !Ref AuthorDispatcherImageId, "" ]

  # Whether a dedicated Publish Dispatcher Instance should be created
  CreatePublishDispatcherInstance: !Not
    - !Equals [ !Ref PublishDispatcherImageId, "" ]

  # Whether AuthorDesignation has been specified or not
  HasAuthorDesignation: !Not
    - !Equals [ !Ref AuthorDesignation, "" ]

  # Whether AuthorDispatcherDesignation has been specified or not
  HasAuthorDispatcherDesignation: !Not
    - !Equals [ !Ref AuthorDispatcherDesignation, "" ]

  # Whether an IAM Instance Profile has been provided or not
  HasIamInstanceProfile: !Not
    - !Equals [ !Ref IamInstanceProfile, "" ]

  # Whether IAM Managed Policies have been provided or not
  HasIamManagedPolicies: !Not
    - !Equals
      - !Join [ "", !Ref IamManagedPolicies ]
      - ""

  # Whether PublishDesignation has been specified or not
  HasPublishDesignation: !Not
    - !Equals [ !Ref PublishDesignation, "" ]

  # Whether PublishDispatcherDesignation has been specified or not
  HasPublishDispatcherDesignation: !Not
    - !Equals [ !Ref PublishDispatcherDesignation, "" ]

  # Whether a additional Security Groups have been specified for the Author Instance (the join is necessary to transform the list to a string that we can compare)
  HasAuthorSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref AuthorSecurityGroupIds ]
      - ""

  # Whether a additional Security Groups have been specified for the Author Dispatcher Instance (the join is necessary to transform the list to a string that we can compare)
  HasAuthorDispatcherSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref AuthorDispatcherSecurityGroupIds ]
      - ""

  # Whether a additional Security Groups have been specified for the Publish Instance (the join is necessary to transform the list to a string that we can compare)
  HasPublishSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref PublishSecurityGroupIds ]
      - ""

  # Whether a additional Security Groups have been specified for the Publish Dispatcher Instance (the join is necessary to transform the list to a string that we can compare)
  HasPublishDispatcherSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref PublishDispatcherSecurityGroupIds ]
      - ""

  #----------------------------
  # LB creation / configuration
  #----------------------------

  # If there should be no Load Balancer, we won't create any
  CreateLb: !Not
    - !Equals [ !Ref LbVisibility, "none" ]

  # Whether a additional Security Groups have been specified for the Load Balancers (the join is necessary to transform the list to a string that we can compare)
  HasLbSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref LbSecurityGroupIds ]
      - ""

  # If the Load balancers are supposed to be public we should set them up to be so
  IsPublicLb: !Equals [ !Ref LbVisibility, "public" ]


################################################################################
#
# Resources (required)
# Declares the AWS resources that you want to include in the stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
#
################################################################################

Resources:
  #=======================================
  # Instance / Host Group layer
  #=======================================

  #----------------------------
  # Security Groups
  #----------------------------

  # Attached to all instances
  SecurityGroupEnv:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules for connections from and to all Instances in env ${RootStackName}"
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-env"
      VpcId: !Ref VpcId

  # If internet access should be disabled, only allow traffic to the instances of this environment
  SecurityGroupEnvEgress:
    Condition: DisableInternetAccess
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: "All Instances (DMZ)"
      DestinationSecurityGroupId: !Ref SecurityGroupEnv
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"

  # Allow ingress traffic from itself -> All instances can communicate with all instances attached to the same SG
  SecurityGroupEnvIngressFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "All Instances (DMZ)"
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  # MGMT DMZ: Allow incoming connections to AppEnvAem from hosts in the MGMT network
  SecurityGroupEnvIngressFromMgmt:
    Condition: CreateDmzWithMgmt
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Network MGMT"
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SgDmzMgmt

  # MGMT DMZ: Allow incoming connections to hosts in the MGMT network from this AppEnv
  SecurityGroupMgmtDmzIngressFromAppEnvAem:
    Condition: CreateDmzWithMgmt
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: !Sub "${RootStackName} AppEnvAem"
      GroupId: !Ref SgDmzMgmt
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  #----------------------------
  # Instance Profile
  #----------------------------

  InstanceRole:
    Condition: HasIamManagedPolicies
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub "Role that defines the privileges of the EC2 Instances in environment \"${RootStackName}\"."
      # Allow the EC2 service to assume this role
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
        Version: "2012-10-17"
      ManagedPolicyArns: !Ref IamManagedPolicies

  InstanceProfile:
    Condition: HasIamManagedPolicies
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref InstanceRole

  #----------------------------
  # Host Groups (one per AZ)
  #----------------------------

  # One AEM Host Group will be created in any case
  G01:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "hostgroup.yaml"
      Tags:
      # Which instance of the applied role (e.g. "1" for "Publish-1")
      - Key: "role_index"
        Value: "1"
      Parameters:
        # Naming details
        #
        Designation: "1"
        RootStackName: !Ref RootStackName

        # General information
        #
        AvailabilityZone: !Select [ "0", !Ref HostGroupsAvailabilityZones ]
        IamInstanceProfile: !If
          - HasIamInstanceProfile
          - !Ref IamInstanceProfile
          - !If
            - HasIamManagedPolicies
            - !Ref InstanceProfile
            - !Ref AWS::NoValue
        RootKeyName: !Ref RootKeyName
        SubnetId: !Select [ "0", !Ref HostGroupsSubnetIds ]

        # Additional features
        #
        FeatureAutoSnapshot: !Ref FeatureAutoSnapshot
        FeatureUptimeWindows: !Join [ ",", !Ref FeatureUptimeWindows ]
        FeatureVolumeEncryption: !Ref FeatureVolumeEncryption

        # Author
        #
        AuthorHostName: !If
          - HasAuthorDesignation
          - !Sub "${AuthorDesignation}1${HostNameSuffix}"
          - !Ref AWS::NoValue
        AuthorImageId: !Ref AuthorImageId
        AuthorInstanceType: !Ref AuthorInstanceType
        AuthorRootDeviceName: !Ref AuthorRootDeviceName
        AuthorRootDeviceIops: !Ref AuthorRootDeviceIops
        AuthorRootDeviceSize: !Ref AuthorRootDeviceSize
        AuthorRootDeviceType: !Ref AuthorRootDeviceType
        AuthorSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Author Dispatcher Instance will be created, the SG should not be assigned to the Author Instance
            - !If
              - CreateAuthorDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupAuthorLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasAuthorSecurityGroups
              - !Join [ ",", !Ref AuthorSecurityGroupIds ]
              - !Ref AWS::NoValue
        AuthorVolumeOptIops: !Ref AuthorVolumeOptIops
        AuthorVolumeOptSize: !Ref AuthorVolumeOptSize
        AuthorVolumeOptThroughput: !Ref AuthorVolumeOptThroughput
        AuthorVolumeOptType: !Ref AuthorVolumeOptType
        AuthorVolumeTmpIops: !Ref AuthorVolumeTmpIops
        AuthorVolumeTmpSize: !Ref AuthorVolumeTmpSize
        AuthorVolumeTmpThroughput: !Ref AuthorVolumeTmpThroughput
        AuthorVolumeTmpType: !Ref AuthorVolumeTmpType
        AuthorVolumeVarIops: !Ref AuthorVolumeVarIops
        AuthorVolumeVarSize: !Ref AuthorVolumeVarSize
        AuthorVolumeVarThroughput: !Ref AuthorVolumeVarThroughput
        AuthorVolumeVarType: !Ref AuthorVolumeVarType

        # Author Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        AuthorDispatcherHostName: !If
          - HasAuthorDispatcherDesignation
          - !Sub "${AuthorDispatcherDesignation}1${HostNameSuffix}"
          - !Ref AWS::NoValue
        AuthorDispatcherImageId: !Ref AuthorDispatcherImageId
        AuthorDispatcherInstanceType: !Ref AuthorDispatcherInstanceType
        AuthorDispatcherRootDeviceName: !Ref AuthorDispatcherRootDeviceName
        AuthorDispatcherRootDeviceIops: !Ref AuthorDispatcherRootDeviceIops
        AuthorDispatcherRootDeviceSize: !Ref AuthorDispatcherRootDeviceSize
        AuthorDispatcherRootDeviceType: !Ref AuthorDispatcherRootDeviceType
        AuthorDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupAuthorLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasAuthorDispatcherSecurityGroups
              - !Join [ ",", !Ref AuthorDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        AuthorDispatcherVolumeVarIops: !Ref AuthorDispatcherVolumeVarIops
        AuthorDispatcherVolumeVarSize: !Ref AuthorDispatcherVolumeVarSize
        AuthorDispatcherVolumeVarThroughput: !Ref AuthorDispatcherVolumeVarThroughput
        AuthorDispatcherVolumeVarType: !Ref AuthorDispatcherVolumeVarType

        # Publish
        #
        PublishHostName: !If
          - HasPublishDesignation
          - !Sub "${PublishDesignation}1${HostNameSuffix}"
          - !Ref AWS::NoValue
        PublishImageId: !Ref PublishImageId
        PublishInstanceType: !Ref PublishInstanceType
        PublishRootDeviceName: !Ref PublishRootDeviceName
        PublishRootDeviceIops: !Ref PublishRootDeviceIops
        PublishRootDeviceSize: !Ref PublishRootDeviceSize
        PublishRootDeviceType: !Ref PublishRootDeviceType
        PublishSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Publish Dispatcher Instance will be created, the SG should not be assigned to the Publish Instance
            - !If
              - CreatePublishDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupPublishLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishSecurityGroups
              - !Join [ ",", !Ref PublishSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishVolumeOptIops: !Ref PublishVolumeOptIops
        PublishVolumeOptSize: !Ref PublishVolumeOptSize
        PublishVolumeOptThroughput: !Ref PublishVolumeOptThroughput
        PublishVolumeOptType: !Ref PublishVolumeOptType
        PublishVolumeTmpIops: !Ref PublishVolumeTmpIops
        PublishVolumeTmpSize: !Ref PublishVolumeTmpSize
        PublishVolumeTmpThroughput: !Ref PublishVolumeTmpThroughput
        PublishVolumeTmpType: !Ref PublishVolumeTmpType
        PublishVolumeVarIops: !Ref PublishVolumeVarIops
        PublishVolumeVarSize: !Ref PublishVolumeVarSize
        PublishVolumeVarThroughput: !Ref PublishVolumeVarThroughput
        PublishVolumeVarType: !Ref PublishVolumeVarType

        # Publish Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        PublishDispatcherHostName: !If
          - HasPublishDispatcherDesignation
          - !Sub "${PublishDispatcherDesignation}1${HostNameSuffix}"
          - !Ref AWS::NoValue
        PublishDispatcherImageId: !Ref PublishDispatcherImageId
        PublishDispatcherInstanceType: !Ref PublishDispatcherInstanceType
        PublishDispatcherRootDeviceName: !Ref PublishDispatcherRootDeviceName
        PublishDispatcherRootDeviceIops: !Ref PublishDispatcherRootDeviceIops
        PublishDispatcherRootDeviceSize: !Ref PublishDispatcherRootDeviceSize
        PublishDispatcherRootDeviceType: !Ref PublishDispatcherRootDeviceType
        PublishDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupPublishLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishDispatcherSecurityGroups
              - !Join [ ",", !Ref PublishDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishDispatcherVolumeVarIops: !Ref PublishDispatcherVolumeVarIops
        PublishDispatcherVolumeVarSize: !Ref PublishDispatcherVolumeVarSize
        PublishDispatcherVolumeVarThroughput: !Ref PublishDispatcherVolumeVarThroughput
        PublishDispatcherVolumeVarType: !Ref PublishDispatcherVolumeVarType

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName

  # If a 2nd application subnet has been specified, create a AEM Host Group in it
  G02:
    Condition: CreateHostGroup2
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "hostgroup.yaml"
      Tags:
      # Which instance of the applied role (e.g. "1" for "Publish-1")
      - Key: "role_index"
        Value: "2"
      Parameters:
        # Naming details
        #
        Designation: "2"
        RootStackName: !Ref RootStackName

        # Host Group configuration
        #
        AvailabilityZone: !Select [ "1", !Ref HostGroupsAvailabilityZones ]
        IamInstanceProfile: !If
          - HasIamInstanceProfile
          - !Ref IamInstanceProfile
          - !If
            - HasIamManagedPolicies
            - !Ref InstanceProfile
            - !Ref AWS::NoValue
        RootKeyName: !Ref RootKeyName
        SubnetId: !Select [ "1", !Ref HostGroupsSubnetIds ]

        # Additional features
        #
        FeatureAutoSnapshot: !Ref FeatureAutoSnapshot
        FeatureUptimeWindows: !Join [ ",", !Ref FeatureUptimeWindows ]
        FeatureVolumeEncryption: !Ref FeatureVolumeEncryption

        # Publish
        #
        PublishHostName: !If
          - HasPublishDesignation
          - !Sub "${PublishDesignation}2${HostNameSuffix}"
          - !Ref AWS::NoValue
        PublishImageId: !Ref PublishImageId
        PublishInstanceType: !Ref PublishInstanceType
        PublishRootDeviceName: !Ref PublishRootDeviceName
        PublishRootDeviceIops: !Ref PublishRootDeviceIops
        PublishRootDeviceSize: !Ref PublishRootDeviceSize
        PublishRootDeviceType: !Ref PublishRootDeviceType
        PublishSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Publish Dispatcher Instance will be created, the SG should not be assigned to the Publish Instance
            - !If
              - CreatePublishDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupPublishLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishSecurityGroups
              - !Join [ ",", !Ref PublishSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishVolumeOptIops: !Ref PublishVolumeOptIops
        PublishVolumeOptSize: !Ref PublishVolumeOptSize
        PublishVolumeOptThroughput: !Ref PublishVolumeOptThroughput
        PublishVolumeOptType: !Ref PublishVolumeOptType
        PublishVolumeTmpIops: !Ref PublishVolumeTmpIops
        PublishVolumeTmpSize: !Ref PublishVolumeTmpSize
        PublishVolumeTmpThroughput: !Ref PublishVolumeTmpThroughput
        PublishVolumeTmpType: !Ref PublishVolumeTmpType
        PublishVolumeVarIops: !Ref PublishVolumeVarIops
        PublishVolumeVarSize: !Ref PublishVolumeVarSize
        PublishVolumeVarThroughput: !Ref PublishVolumeVarThroughput
        PublishVolumeVarType: !Ref PublishVolumeVarType

        # Publish Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        PublishDispatcherHostName: !If
          - HasPublishDispatcherDesignation
          - !Sub "${PublishDispatcherDesignation}2${HostNameSuffix}"
          - !Ref AWS::NoValue
        PublishDispatcherImageId: !Ref PublishDispatcherImageId
        PublishDispatcherInstanceType: !Ref PublishDispatcherInstanceType
        PublishDispatcherRootDeviceName: !Ref PublishDispatcherRootDeviceName
        PublishDispatcherRootDeviceIops: !Ref PublishDispatcherRootDeviceIops
        PublishDispatcherRootDeviceSize: !Ref PublishDispatcherRootDeviceSize
        PublishDispatcherRootDeviceType: !Ref PublishDispatcherRootDeviceType
        PublishDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupPublishLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishDispatcherSecurityGroups
              - !Join [ ",", !Ref PublishDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishDispatcherVolumeVarIops: !Ref PublishDispatcherVolumeVarIops
        PublishDispatcherVolumeVarSize: !Ref PublishDispatcherVolumeVarSize
        PublishDispatcherVolumeVarThroughput: !Ref PublishDispatcherVolumeVarThroughput
        PublishDispatcherVolumeVarType: !Ref PublishDispatcherVolumeVarType

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName

  # If a 3rd application subnet has been specified, create a AEM Host Group in it
  G03:
    Condition: CreateHostGroup3
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "hostgroup.yaml"
      Tags:
      # Which instance of the applied role (e.g. "1" for "Publish-1")
      - Key: "role_index"
        Value: "3"
      Parameters:
        # Naming details
        #
        Designation: "3"
        RootStackName: !Ref RootStackName

        # Host Group configuration
        #
        AvailabilityZone: !Select [ "2", !Ref HostGroupsAvailabilityZones ]
        IamInstanceProfile: !If
          - HasIamInstanceProfile
          - !Ref IamInstanceProfile
          - !If
            - HasIamManagedPolicies
            - !Ref InstanceProfile
            - !Ref AWS::NoValue
        RootKeyName: !Ref RootKeyName
        SubnetId: !Select [ "2", !Ref HostGroupsSubnetIds ]

        # Additional features
        #
        FeatureAutoSnapshot: !Ref FeatureAutoSnapshot
        FeatureUptimeWindows: !Join [ ",", !Ref FeatureUptimeWindows ]
        FeatureVolumeEncryption: !Ref FeatureVolumeEncryption

        # Publish
        #
        PublishHostName: !If
          - HasPublishDesignation
          - !Sub "${PublishDesignation}3${HostNameSuffix}"
          - !Ref AWS::NoValue
        PublishImageId: !Ref PublishImageId
        PublishInstanceType: !Ref PublishInstanceType
        PublishRootDeviceName: !Ref PublishRootDeviceName
        PublishRootDeviceIops: !Ref PublishRootDeviceIops
        PublishRootDeviceSize: !Ref PublishRootDeviceSize
        PublishRootDeviceType: !Ref PublishRootDeviceType
        PublishSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Publish Dispatcher Instance will be created, the SG should not be assigned to the Publish Instance
            - !If
              - CreatePublishDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupPublishLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishSecurityGroups
              - !Join [ ",", !Ref PublishSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishVolumeOptIops: !Ref PublishVolumeOptIops
        PublishVolumeOptSize: !Ref PublishVolumeOptSize
        PublishVolumeOptThroughput: !Ref PublishVolumeOptThroughput
        PublishVolumeOptType: !Ref PublishVolumeOptType
        PublishVolumeTmpIops: !Ref PublishVolumeTmpIops
        PublishVolumeTmpSize: !Ref PublishVolumeTmpSize
        PublishVolumeTmpThroughput: !Ref PublishVolumeTmpThroughput
        PublishVolumeTmpType: !Ref PublishVolumeTmpType
        PublishVolumeVarIops: !Ref PublishVolumeVarIops
        PublishVolumeVarSize: !Ref PublishVolumeVarSize
        PublishVolumeVarThroughput: !Ref PublishVolumeVarThroughput
        PublishVolumeVarType: !Ref PublishVolumeVarType

        # Publish Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        PublishDispatcherHostName: !If
          - HasPublishDispatcherDesignation
          - !Sub "${PublishDispatcherDesignation}3${HostNameSuffix}"
          - !Ref AWS::NoValue
        PublishDispatcherImageId: !Ref PublishDispatcherImageId
        PublishDispatcherInstanceType: !Ref PublishDispatcherInstanceType
        PublishDispatcherRootDeviceName: !Ref PublishDispatcherRootDeviceName
        PublishDispatcherRootDeviceIops: !Ref PublishDispatcherRootDeviceIops
        PublishDispatcherRootDeviceSize: !Ref PublishDispatcherRootDeviceSize
        PublishDispatcherRootDeviceType: !Ref PublishDispatcherRootDeviceType
        PublishDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupPublishLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishDispatcherSecurityGroups
              - !Join [ ",", !Ref PublishDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishDispatcherVolumeVarIops: !Ref PublishDispatcherVolumeVarIops
        PublishDispatcherVolumeVarSize: !Ref PublishDispatcherVolumeVarSize
        PublishDispatcherVolumeVarThroughput: !Ref PublishDispatcherVolumeVarThroughput
        PublishDispatcherVolumeVarType: !Ref PublishDispatcherVolumeVarType

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName

  #=======================================
  # LB layer
  #=======================================

  #----------------------------
  # Security Groups
  #----------------------------

  # SG LB-Target = SG that receives traffic from the LB (to limit the instances that can be accessed via LB)
  SecurityGroupAuthorLbTarget:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules for connections to the targets of the Author LB in env ${RootStackName}"
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-alb-author-target"
      VpcId: !Ref VpcId

  # Avoiding circular dependencies (G0x -> SecurityGroupAuthorLbTarget -> AuthorLb -> G0x)
  SecurityGroupAuthorLbTargetIngressLb:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Author LB"
      FromPort: !Ref LbTargetPort
      GroupId: !Ref SecurityGroupAuthorLbTarget
      IpProtocol: "tcp"
      SourceSecurityGroupId: !GetAtt AuthorLb.Outputs.SecurityGroupLb
      ToPort: !Ref LbTargetPort

  # Avoiding circular dependencies (G0x -> SecurityGroupAuthorLbTarget -> AuthorLb -> G0x)
  SecurityGroupAuthorLbTargetEgressLb:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: "Author LB"
      DestinationSecurityGroupId: !GetAtt AuthorLb.Outputs.SecurityGroupLb
      GroupId: !Ref SecurityGroupAuthorLbTarget
      IpProtocol: "-1"

  # SG LB-Target = SG that receives traffic from the LB (to limit the instances that can be accessed via LB)
  SecurityGroupPublishLbTarget:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules for connections to the targets of the Publish LB in env ${RootStackName}"
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-alb-publish-target"
      VpcId: !Ref VpcId

  # Avoiding circular dependencies (G0x -> SecurityGroupPublishLbTarget -> PublishLb -> G0x)
  SecurityGroupPublishLbTargetIngressLb:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Publish LB"
      FromPort: !Ref LbTargetPort
      GroupId: !Ref SecurityGroupPublishLbTarget
      IpProtocol: "tcp"
      SourceSecurityGroupId: !GetAtt PublishLb.Outputs.SecurityGroupLb
      ToPort: !Ref LbTargetPort

  # Avoiding circular dependencies (G0x -> SecurityGroupPublishLbTarget -> PublishLb -> G0x)
  SecurityGroupPublishLbTargetEgressLb:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: "Publish LB"
      DestinationSecurityGroupId: !GetAtt PublishLb.Outputs.SecurityGroupLb
      GroupId: !Ref SecurityGroupPublishLbTarget
      IpProtocol: "-1"

  #----------------------------
  # LBs
  #----------------------------

  AuthorLb:
    Condition: CreateLb
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "../../../resources/elb/alb.yaml"
      Parameters:
        # Naming details
        #
        Designation: "author"
        RootStackName: !Ref RootStackName

        # ALB configuration
        #
        AllowAllTraffic: !Ref LbAllowAllTraffic
        DeregistrationDelay: !Ref LbDeregistrationDelay
        EnableHttp2: !Ref LbEnableHttp2
        Scheme: !If
          - IsPublicLb
          - "internet-facing"
          - "internal"
        SecurityGroupIds: !Join
          - ","
          - # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasLbSecurityGroups
              - !Join [ ",",  !Ref LbSecurityGroupIds ]
              - !Ref AWS::NoValue
        StickinessDuration: !Ref LbStickinessDuration
        SubnetIds: !Join
          - ","
          - !Ref LbSubnetIds
        TargetPort: !Ref LbTargetPort
        TargetProtocol: !Ref LbTargetProtocol
        VpcId: !Ref VpcId

        # ALB HTTP configuration (optional)
        #
        HttpPort: !Ref LbHttpPort

        # ALB HTTPS configuration (optional)
        #
        HttpsPort: !Ref LbHttpsPort
        SslCertificateArn: !Ref LbAuthorSslCertificateArn

        # Health check configuration (optional)
        #
        HealthCheckInterval: !Ref LbHealthCheckInterval
        HealthCheckPath: !Ref LbHealthCheckPath
        HealthCheckProtocol: !Ref LbHealthCheckProtocol
        HealthCheckTimeout: !Ref LbHealthCheckTimeout
        HealthyStatusCode: !Ref LbHealthyStatusCode
        HealthyThresholdCount: !Ref LbHealthyThresholdCount
        UnhealthyThresholdCount: !Ref LbUnhealthyThresholdCount

        # Target 01
        #
        Instance1Id:
          !GetAtt G01.Outputs.LoadBalancedAuthorInstance

        # DNS Record configuration (optional)
        #
        DnsName: !If
          - HasAuthorDesignation
          - !Sub "${AuthorDesignation}${HostNameSuffix}"
          - !Ref AWS::NoValue
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName
        TimeToLive: !Ref LbTimeToLive

  PublishLb:
    Condition: CreateLb
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "../../../resources/elb/alb.yaml"
      Parameters:
        # Naming details
        #
        Designation: "publish"
        RootStackName: !Ref RootStackName

        # ALB configuration
        #
        AllowAllTraffic: !Ref LbAllowAllTraffic
        DeregistrationDelay: !Ref LbDeregistrationDelay
        EnableHttp2: !Ref LbEnableHttp2
        Scheme: !If
          - IsPublicLb
          - "internet-facing"
          - "internal"
        SecurityGroupIds: !Join
          - ","
          - # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasLbSecurityGroups
              - !Join [ ",", !Ref LbSecurityGroupIds ]
              - !Ref AWS::NoValue
        StickinessDuration: !Ref LbStickinessDuration
        SubnetIds: !Join
          - ","
          - !Ref LbSubnetIds
        TargetPort: !Ref LbTargetPort
        TargetProtocol: !Ref LbTargetProtocol
        VpcId: !Ref VpcId

        # ALB HTTP configuration (optional)
        #
        HttpPort: !Ref LbHttpPort

        # ALB HTTPS configuration (optional)
        #
        HttpsPort: !Ref LbHttpsPort
        SslCertificateArn: !Ref LbPublishSslCertificateArn

        # Health check configuration (optional)
        #
        HealthCheckInterval: !Ref LbHealthCheckInterval
        HealthCheckPath: !Ref LbHealthCheckPath
        HealthCheckProtocol: !Ref LbHealthCheckProtocol
        HealthCheckTimeout: !Ref LbHealthCheckTimeout
        HealthyStatusCode: !Ref LbHealthyStatusCode
        HealthyThresholdCount: !Ref LbHealthyThresholdCount
        UnhealthyThresholdCount: !Ref LbUnhealthyThresholdCount

        # Target 01
        #
        Instance1Id:
          !GetAtt G01.Outputs.LoadBalancedPublishInstance

        # Target 02 (optional)
        #
        Instance2Id: !If
          - CreateHostGroup2
          - !GetAtt G02.Outputs.LoadBalancedPublishInstance
          - !Ref AWS::NoValue

        # Target 03 (optional)
        #
        Instance3Id: !If
          - CreateHostGroup3
          - !GetAtt G03.Outputs.LoadBalancedPublishInstance
          - !Ref AWS::NoValue

        # DNS Record configuration (optional)
        #
        DnsName: !If
          - HasPublishDesignation
          - !Sub "${PublishDesignation}${HostNameSuffix}"
          - !Ref AWS::NoValue
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName
        TimeToLive: !Ref LbTimeToLive


################################################################################
#
# Outputs (optional)
# Declares output values that you can import into other stacks (to create cross-stack references)
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
################################################################################

Outputs:
  #=======================================
  # Instance / Host Group layer
  #=======================================

  SecurityGroupEnv:
    Description: "The Security Group that is attached to all Instances in this environment."
    Value: !Ref SecurityGroupEnv

  #----------------------------
  # Stack: G01
  #----------------------------

  G01LoadBalancedAuthorInstance:
    Description: "The ID of the Instance in Host Group 1, that will be used in the Author Load Balancer."
    Value: !GetAtt G01.Outputs.LoadBalancedAuthorInstance

  G01LoadBalancedPublishInstance:
    Description: "The ID of the Instance in Host Group 1, that will be used in the Publish Load Balancer."
    Value: !GetAtt G01.Outputs.LoadBalancedPublishInstance

  #----------------------------
  # Stack: G02
  #----------------------------

  G02LoadBalancedPublishInstance:
    Condition: CreateHostGroup2
    Description: "The ID of the Instance in Host Group 2, that will be used in the Publish Load Balancer."
    Value: !GetAtt G02.Outputs.LoadBalancedPublishInstance

  #----------------------------
  # Stack: G03
  #----------------------------

  G03LoadBalancedPublishInstance:
    Condition: CreateHostGroup3
    Description: "The ID of the Instance in Host Group 3, that will be used in the Publish Load Balancer."
    Value: !GetAtt G03.Outputs.LoadBalancedPublishInstance

  #=======================================
  # LB layer
  #=======================================

  SecurityGroupAuthorLb:
    Condition: CreateLb
    Description: "The Security Group that is attached to the Author Load Balancer in this environment."
    Value: !GetAtt AuthorLb.Outputs.SecurityGroupLb

  SecurityGroupAuthorLbTarget:
    Condition: CreateLb
    Description: "The Security Group that is attached to the Target(s) of the Author Load Balancer in this environment."
    Value: !Ref SecurityGroupAuthorLbTarget

  SecurityGroupPublishLb:
    Condition: CreateLb
    Description: "The Security Group that is attached to the Publish Load Balancer in this environment."
    Value: !GetAtt PublishLb.Outputs.SecurityGroupLb

  SecurityGroupPublishLbTarget:
    Condition: CreateLb
    Description: "The Security Group that is attached to the Target(s) of the Publish Load Balancer in this environment."
    Value: !Ref SecurityGroupPublishLbTarget

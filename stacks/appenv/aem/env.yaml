AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation IaC --- Environment with one Author and up to three Publish Instances, each in a different Availability Zone"

################################################################################
#
# Decision Trees:
#
#   Dispatcher:
#     DispatcherImageId != ""
#       true  -> Dispatcher Instance: Created
#             -> SG attached to: <DispatcherInstance>
#       false -> Dispatcher Instance: None [default]
#             -> SG attached to: <Instance>
#
#   DNS entries:
#     HostedZoneName != ""
#       true  -> Created
#       false -> None [default]
#
#   Host Groups:
#     G<XX>SubnetId != "" && G<XX>AvailabilityZone != ""
#       true  -> Created
#       false -> None [default]
#
#   LB and related SG:
#     LbVisibility == "none"
#       false -> None created
#     LbVisibility == "private"
#       true  -> Created with private DNS [default]
#     LbVisibility == "public"
#       true  -> Created with private and public DNS
#
#   LB protocols:
#     LbHttpPort != 0
#       true  -> Enabled [default]
#       false -> Disabled
#     LbHttpsPort != 0
#       true  -> Enabled
#       false -> Disabled [default]
#
################################################################################


################################################################################
#
# Metadata (optional)
# provide details about the template
#
# See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
#
################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "Naming details"
      Parameters:
      - RootStackName
    - Label:
        default: "Environment configuration"
      Parameters:
      - IamInstanceProfile
      - RootKeyName
      - SgDmzMgmt
      - VpcId
    - Label:
        default: "Additional features"
      Parameters:
      - FeatureAutoSnapshot
      - FeatureInternetAccess
      - FeatureUptimeWindows
      - FeatureVolumeEncryption
    - Label:
        default: "Load Balancer"
      Parameters:
      - LbAllowAllTraffic
      - LbDeregistrationDelay
      - LbEnableHttp2
      - LbHealthCheckInterval
      - LbHealthCheckPath
      - LbHealthCheckProtocol
      - LbHealthCheckTimeout
      - LbHealthyStatusCode
      - LbHealthyThresholdCount
      - LbHttpPort
      - LbHttpsPort
      - LbSecurityGroupIds
      - LbStickinessDuration
      - LbSubnetIds
      - LbTargetPort
      - LbTargetProtocol
      - LbTimeToLive
      - LbUnhealthyThresholdCount
      - LbVisibility
    - Label:
        default: "Load Balancer - Author (optional)"
      Parameters:
      - LbAuthorSslCertificateArn
    - Label:
        default: "Load Balancer - Publish (optional)"
      Parameters:
      - LbPublishSslCertificateArn
    - Label:
        default: "Host Groups"
      Parameters:
      - HostGroupsAvailabilityZones
      - HostGroupsCount
      - HostGroupsSubnetIds
    - Label:
        default: "Author"
      Parameters:
      - AuthorImageId
      - AuthorInstanceType
      - AuthorSecurityGroupIds
      - AuthorVolumeOptIops
      - AuthorVolumeOptSize
      - AuthorVolumeOptType
      - AuthorVolumeTmpIops
      - AuthorVolumeTmpSize
      - AuthorVolumeTmpType
      - AuthorVolumeVarIops
      - AuthorVolumeVarSize
      - AuthorVolumeVarType
    - Label:
        default: "Author Dispatcher (optional)"
      Parameters:
      - AuthorDispatcherImageId
      - AuthorDispatcherInstanceType
      - AuthorDispatcherSecurityGroupIds
      - AuthorDispatcherVolumeVarIops
      - AuthorDispatcherVolumeVarSize
      - AuthorDispatcherVolumeVarType
    - Label:
        default: "Publish"
      Parameters:
      - PublishImageId
      - PublishInstanceType
      - PublishSecurityGroupIds
      - PublishVolumeOptIops
      - PublishVolumeOptSize
      - PublishVolumeOptType
      - PublishVolumeTmpIops
      - PublishVolumeTmpSize
      - PublishVolumeTmpType
      - PublishVolumeVarIops
      - PublishVolumeVarSize
      - PublishVolumeVarType
    - Label:
        default: "Publish Dispatcher (optional)"
      Parameters:
      - PublishDispatcherImageId
      - PublishDispatcherInstanceType
      - PublishDispatcherSecurityGroupIds
      - PublishDispatcherVolumeVarIops
      - PublishDispatcherVolumeVarSize
      - PublishDispatcherVolumeVarType
    - Label:
        default: "DNS Record configuration (optional)"
      Parameters:
      - DnsServiceToken
      - HostedZoneName


################################################################################
#
# Parameters (optional)
# Passes values into templates when creating a stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
################################################################################

Parameters:
  #=======================================
  # Naming details
  #=======================================

  RootStackName:
    Description: "Name of the top-level stack to which this stack, if nested, ultimately belongs (this stacks name else)."
    Type: String

  #=======================================
  # Environment configuration
  #=======================================

  IamInstanceProfile:
    Description: "The ARN of an IAM Instance Profile that is used to grant permissions to the EC2 Instances of this environment."
    Type: String
    Default: ""

  RootKeyName:
    Description: "The name of the Amazon EC2 key pair that will be used to access the Instances via SSH."
    Type: AWS::EC2::KeyPair::KeyName

  SgDmzMgmt:
    Description: "The Security Group used to create a DMZ with all hosts in a central Management VPC (optional)"
    Type: String
    Default: ""

  VpcId:
    Description: "The ID of the VPC in which the targets are located."
    Type: AWS::EC2::VPC::Id

  #=======================================
  # Additional features
  #=======================================

  FeatureAutoSnapshot:
    Description: "Whether EBS Volumes should be backed up automatically not. This feature can be enabled by specifying a ScheduleName that was used with the \"automatic-snapshots\" template (examples: \"Daily\")."
    Type: String
    Default: "disabled"

  FeatureInternetAccess:
    Description: "Whether access to the internet should be possible for Instances in this environment."
    Type: String
    AllowedValues: [ "disabled", "enabled" ]
    Default: "enabled"

  FeatureUptimeWindows:
    Description: "A list consisting of two elements in the UNIX cron format, the first representing the start and the second the stop times. If set to \"disabled\", the instances will run 24/7 (example: \"* 4 ? * MON-FRI *\", \"* 20 ? * MON-FRI *\")."
    Type: CommaDelimitedList
    Default: "disabled"

  FeatureVolumeEncryption:
    Description: "Whether all Volumes of all Instance should be encrypted or not."
    Type: String
    AllowedValues: [ "false", "true" ]
    Default: "false"

  #=======================================
  # Load Balancer
  #=======================================

  LbAllowAllTraffic:
    Description: "Whether the Load Balancer should permit TCP or UDP flows for all traffic (0.0.0.0/0) in both directions for all ports (0-65535) or not."
    Type: String
    AllowedValues: [ "true", "false" ]
    Default: "true"

  LbDeregistrationDelay:
    Description: "The amount of time, in seconds, for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused (0 to 3600)."
    Type: Number
    Default: 300

  LbEnableHttp2:
    Description: "Whether HTTP/2 should be enabled or disabled. If disabled, HTTP1.1 will be used exclusively."
    Type: String
    AllowedValues: [ "false", "true" ]
    Default: "true"

  LbHealthCheckInterval:
    Description: "The approximate number of seconds between health checks for an individual target."
    Type: Number
    Default: 15

  LbHealthCheckPath:
    Description: "The destination for health checks on the targets."
    Type: String
    Default: "/"

  LbHealthCheckProtocol:
    Description: "The protocol the load balancer uses when performing health checks on targets."
    Type: String
    AllowedValues: [ "HTTP", "HTTPS" ]
    Default: "HTTP"

  LbHealthCheckTimeout:
    Description: "The amount of time, in seconds, during which no response from a target means a failed health check."
    Type: Number
    Default: 5

  LbHealthyStatusCode:
    Description: "The HTTP codes that a healthy target must use when responding to a health check (examples: \"200\" or \"200-399\")."
    Type: String
    Default: "200"

  LbHealthyThresholdCount:
    Description: "The number of consecutive health checks successes required before considering an unhealthy target healthy."
    Type: Number
    Default: 5

  LbHttpPort:
    Description: "The port on which the Load Balancer listens for HTTP requests (if zero, HTTP will be disabled)."
    Type: Number
    Default: 80

  LbHttpsPort:
    Description: "The port on which the Load Balancer listens for HTTPS requests (if zero, HTTPS will be disabled). When set, LbAuthorSslCertificateArn and LbPublishSslCertificateArn need to be set too."
    Type: Number
    Default: 0

  LbSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Load Balancers."
    Type: CommaDelimitedList
    Default: ""

  LbStickinessDuration:
    Description: "The time period, in seconds, during which requests from a client should be routed to the same target (0 to 604800)."
    Type: Number
    Default: 0

  LbSubnetIds:
    Description: "The IDs of the Subnets that will be attached to the Load Balancer (required if LbVisibility is not \"none\")."
    Type: CommaDelimitedList
    Default: ""

  LbTargetPort:
    Description: "The port to which the Load Balancer will send traffic to its targets."
    Type: Number
    Default: 80

  LbTargetProtocol:
    Description: "The port on which the Target Group should be created."
    Type: String
    AllowedValues: [ "HTTP", "HTTPS" ]
    Default: "HTTP"

  LbTimeToLive:
    Description: "The DNS Records cache time to live (TTL), in seconds, for the Load Balancers."
    Type: Number
    Default: 300

  LbUnhealthyThresholdCount:
    Description: "The number of consecutive health check failures required before considering a target unhealthy."
    Type: Number
    Default: 2

  LbVisibility:
    Description: "Whether the Load Balancers should be accessible from the internet, only from the VPC or nonexistent at all."
    Type: String
    AllowedValues: [ "none", "private", "public" ]
    Default: "private"

  #=======================================
  # Load Balancer - Author (optional)
  #=======================================

  LbAuthorSslCertificateArn:
    Description: "The Amazon Resource Name (ARN) of the certificate to associate with the Author LBs HTTPS Listener."
    Type: String
    Default: ""

  #=======================================
  # Load Balancer - Author (optional)
  #=======================================

  LbPublishSslCertificateArn:
    Description: "The Amazon Resource Name (ARN) of the certificate to associate with the Publish LBs HTTPS Listener."
    Type: String
    Default: ""

  #=======================================
  # Host Groups
  #=======================================

  HostGroupsAvailabilityZones:
    Description: "The names of the Availability Zones containing the Subnets specified in HostGroupsSubnetIds. Must be as many items as specified in \"HostGroupsCount\" (example: \"eu-central-1a, eu-central-1b, eu-central-1c\")."
    Type: CommaDelimitedList

  HostGroupsCount:
    Description: "The number of Host Groups that should be created (max: 3)."
    Type: Number
    AllowedValues: [ 1, 2, 3 ]

  HostGroupsSubnetIds:
    Description: "The IDs of the Subnets, the application instances should be placed into. Must be as many items as specified in \"HostGroupsCount\" (example: \"subnet-1234567890abcdefg, subnet-abcdefg1234567890, subnet-12345abcdefg67890\")."
    Type: CommaDelimitedList

  #=======================================
  # AEM Author
  #=======================================

  AuthorImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Author Instance will be created from."
    Type: AWS::EC2::Image::Id

  AuthorInstanceType:
    Description: "The instance type for the Author Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "m5a.xlarge"

  AuthorSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Author."
    Type: CommaDelimitedList
    Default: ""

  AuthorVolumeOptIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/opt\" Volume of the Author Instance will support (only used if AuthorVolumeOptType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeOptSize:
    Description: "The size of the \"/opt\" Volume of the Author Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorVolumeOptType:
    Description: "The Volume type of the \"/opt\" Volume of the Author Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorVolumeOptIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  AuthorVolumeTmpIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/tmp\" Volume of the Author Instance will support (only used if AuthorVolumeTmpType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeTmpSize:
    Description: "The size of the \"/tmp\" Volume of the Author Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorVolumeTmpType:
    Description: "The Volume type of the \"/tmp\" Volume of the Author Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorVolumeTmpIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  AuthorVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Author Instance will support (only used if AuthorVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Author Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Author Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # Author Dispatcher (optional)
  #=======================================

  AuthorDispatcherImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Author Dispatcher Instance will be created from (if this value is empty the Instance will not be created)."
    Type: String
    Default: ""

  AuthorDispatcherInstanceType:
    Description: "The instance type for the Author Dispatcher Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "t3.medium"

  AuthorDispatcherSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Author Dispatcher."
    Type: CommaDelimitedList
    Default: ""

  AuthorDispatcherVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Author Dispatcher Instance will support (only used if AuthorDispatcherVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  AuthorDispatcherVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Author Dispatcher Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  AuthorDispatcherVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Author Dispatcher Instance (if you set the type to \"io1\" or \"io2\", you must also set the AuthorDispatcherVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # AEM Publish
  #=======================================

  PublishImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Publish Instance will be created from."
    Type: AWS::EC2::Image::Id

  PublishInstanceType:
    Description: "The instance type for the Publish Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "m5a.large"

  PublishSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Publisher."
    Type: CommaDelimitedList
    Default: ""

  PublishVolumeOptIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/opt\" Volume of the Publish Instance will support (only used if PublishVolumeOptType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeOptSize:
    Description: "The size of the \"/opt\" Volume of the Publish Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishVolumeOptType:
    Description: "The Volume type of the \"/opt\" Volume of the Publish Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishVolumeOptIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  PublishVolumeTmpIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/tmp\" Volume of the Publish Instance will support (only used if PublishVolumeTmpType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeTmpSize:
    Description: "The size of the \"/tmp\" Volume of the Publish Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishVolumeTmpType:
    Description: "The Volume type of the \"/tmp\" Volume of the Publish Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishVolumeTmpIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  PublishVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Publish Instance will support (only used if PublishVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Publish Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Publish Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # Publish Dispatcher (optional)
  #=======================================

  PublishDispatcherImageId:
    Description: "The unique ID of the Amazon Machine Image (AMI) the Publish Dispatcher Instance will be created from (if this value is empty the Instance will not be created)."
    Type: String
    Default: ""

  PublishDispatcherInstanceType:
    Description: "The instance type for the Publish Dispatcher Instance (examples: \"t3a.micro\" or \"m5.xlarge\")."
    Type: String
    Default: "t3.medium"

  PublishDispatcherSecurityGroupIds:
    Description: "The Security Groups, identified by their IDs, that will be attached to the Instance designated for the Publish Dispatcher."
    Type: CommaDelimitedList
    Default: ""

  PublishDispatcherVolumeVarIops:
    Description: "The number of I/O operations per second (IOPs) that the \"/var\" Volume of the Publish Dispatcher Instance will support (only used if PublishDispatcherVolumeVarType is set to \"io1\", \"io2\" or \"gp3\")."
    Type: Number
    Default: 0

  PublishDispatcherVolumeVarSize:
    Description: "The size of the \"/var\" Volume of the Publish Dispatcher Instance, in gibibytes (if this value is 0 the volume will not be created)."
    Type: Number
    Default: 0

  PublishDispatcherVolumeVarType:
    Description: "The Volume type of the \"/var\" Volume of the Publish Dispatcher Instance (if you set the type to \"io1\" or \"io2\", you must also set the PublishDispatcherVolumeVarIops property)."
    Type: String
    AllowedValues: [ "standard", "io1", "io2", "gp2", "gp3", "sc1", "st1" ]
    Default: "gp3"

  #=======================================
  # DNS Record configuration (optional)
  #=======================================

  DnsServiceToken:
    Description: "The SNS Topic ARN or Lambda function ARN that was provided to access the service that manages remote DNS Records (only required if DNS Records are managed in a different account; must be from the same region as this stack)."
    Type: String
    Default: ""

  HostedZoneName:
    Description: "The name of the domain for the Hosted Zone where the DNS Record Sets should be added (if left empty, no DNS Record will be created; example: \"my-project.example.com\")."
    Type: String
    Default: ""


################################################################################
#
# Conditions (optional)
# Includes statements that define when a resource is created or when a property is defined
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
#
################################################################################

Conditions:
  #----------------------------
  # Network
  #----------------------------

  # If a Security Group for a DMZ with a central Management VPC has been provided, use it
  CreateDmzWithMgmt: !Not
    - !Equals [ !Ref SgDmzMgmt, "" ]

  # If access to the internet should be disabled, we should do this
  DisableInternetAccess: !Equals [ !Ref FeatureInternetAccess, "disabled" ]

  #----------------------------
  # Host Group creation / configuration
  #----------------------------

  # Whether a second Host Group should be created
  CreateHostGroup2: !Or
    - !Equals [ !Ref HostGroupsCount, 2 ]
    - !Condition CreateHostGroup3

  # Whether a third Host Group should be created
  CreateHostGroup3: !Equals [ !Ref HostGroupsCount, 3 ]

  #----------------------------
  # Instance creation / configuration
  #----------------------------

  # Whether a dedicated Author Dispatcher Instance should be created
  CreateAuthorDispatcherInstance: !Not
    - !Equals [ !Ref AuthorDispatcherImageId, "" ]

  # Whether a dedicated Publish Dispatcher Instance should be created
  CreatePublishDispatcherInstance: !Not
    - !Equals [ !Ref PublishDispatcherImageId, "" ]

  # Whether a additional Security Groups have been specified for the Author Instance (the join is necessary to transform the list to a string that we can compare)
  HasAuthorSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref AuthorSecurityGroupIds ]
      - ""

  # Whether a additional Security Groups have been specified for the Author Dispatcher Instance (the join is necessary to transform the list to a string that we can compare)
  HasAuthorDispatcherSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref AuthorDispatcherSecurityGroupIds ]
      - ""

  # Whether a additional Security Groups have been specified for the Publish Instance (the join is necessary to transform the list to a string that we can compare)
  HasPublishSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref PublishSecurityGroupIds ]
      - ""

  # Whether a additional Security Groups have been specified for the Publish Dispatcher Instance (the join is necessary to transform the list to a string that we can compare)
  HasPublishDispatcherSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref PublishDispatcherSecurityGroupIds ]
      - ""

  #----------------------------
  # LB creation / configuration
  #----------------------------

  # Whether all incoming and outgoing traffic should be allowed
  AllowAllTraffic: !Equals [ !Ref LbAllowAllTraffic, "true" ]

  # If there should be no Load Balancer, we won't create any
  CreateLb: !Not
    - !Equals [ !Ref LbVisibility, "none" ]

  # If the HTTP port is 0, then HTTP will be disabled
  EnableHttp: !Not
    - !Equals [ !Ref LbHttpPort, 0 ]

  # If the HTTPS port is 0, then HTTPS will be disabled
  EnableHttps: !Not
    - !Equals [ !Ref LbHttpsPort, 0 ]

  # Whether a additional Security Groups have been specified for the Load Balancers (the join is necessary to transform the list to a string that we can compare)
  HasLbSecurityGroups: !Not
    - !Equals
      - !Join [ "", !Ref LbSecurityGroupIds ]
      - ""

  # If the Load balancers are supposed to be public we should set them up to be so
  IsPublicLb: !Equals [ !Ref LbVisibility, "public" ]


################################################################################
#
# Resources (required)
# Declares the AWS resources that you want to include in the stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
#
################################################################################

Resources:
  #=======================================
  # Instance / Host Group layer
  #=======================================

  #----------------------------
  # Security Groups
  #----------------------------

  # Attached to all instances
  SecurityGroupEnv:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules for connections from and to all Instances in env ${RootStackName}"
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-env"
      VpcId: !Ref VpcId

  # If internet access should be disabled, only allow traffic to the instances of this environment
  SecurityGroupEnvEgress:
    Condition: DisableInternetAccess
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: "All Instances (DMZ)"
      DestinationSecurityGroupId: !Ref SecurityGroupEnv
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"

  # Allow ingress traffic from itself -> All instances can communicate with all instances attached to the same SG
  SecurityGroupEnvIngressFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "All Instances (DMZ)"
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  # MGMT DMZ: Allow incoming connections to AppEnvAem from hosts in the MGMT network
  SecurityGroupEnvIngressFromMgmt:
    Condition: CreateDmzWithMgmt
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Network MGMT"
      GroupId: !Ref SecurityGroupEnv
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SgDmzMgmt

  # MGMT DMZ: Allow incoming connections to hosts in the MGMT network from this AppEnv
  SecurityGroupMgmtDmzIngressFromAppEnvAem:
    Condition: CreateDmzWithMgmt
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: !Sub "${RootStackName} AppEnvAem"
      GroupId: !Ref SgDmzMgmt
      IpProtocol: "-1"
      SourceSecurityGroupId: !Ref SecurityGroupEnv

  #----------------------------
  # Host Groups (one per AZ)
  #----------------------------

  # One AEM Host Group will be created in any case
  G01:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "hostgroup.yaml"
      Tags:
      # Which instance of the applied role (e.g. "1" for "Publish-1")
      - Key: "role_index"
        Value: "1"
      Parameters:
        # Naming details
        #
        Designation: "1"
        RootStackName: !Ref RootStackName

        # General information
        #
        AvailabilityZone: !Select [ "0", !Ref HostGroupsAvailabilityZones ]
        IamInstanceProfile: !Ref IamInstanceProfile
        RootKeyName: !Ref RootKeyName
        SubnetId: !Select [ "0", !Ref HostGroupsSubnetIds ]

        # Additional features
        #
        FeatureAutoSnapshot: !Ref FeatureAutoSnapshot
        FeatureUptimeWindows: !Join [ ",", !Ref FeatureUptimeWindows ]
        FeatureVolumeEncryption: !Ref FeatureVolumeEncryption

        # Author
        #
        AuthorImageId: !Ref AuthorImageId
        AuthorInstanceType: !Ref AuthorInstanceType
        AuthorSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Author Dispatcher Instance will be created, the SG should not be assigned to the Author Instance
            - !If
              - CreateAuthorDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupAuthorLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasAuthorSecurityGroups
              - !Join [ ",", !Ref AuthorSecurityGroupIds ]
              - !Ref AWS::NoValue
        AuthorVolumeOptIops: !Ref AuthorVolumeOptIops
        AuthorVolumeOptSize: !Ref AuthorVolumeOptSize
        AuthorVolumeOptType: !Ref AuthorVolumeOptType
        AuthorVolumeTmpIops: !Ref AuthorVolumeTmpIops
        AuthorVolumeTmpSize: !Ref AuthorVolumeTmpSize
        AuthorVolumeTmpType: !Ref AuthorVolumeTmpType
        AuthorVolumeVarIops: !Ref AuthorVolumeVarIops
        AuthorVolumeVarSize: !Ref AuthorVolumeVarSize
        AuthorVolumeVarType: !Ref AuthorVolumeVarType

        # Author Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        AuthorDispatcherImageId: !Ref AuthorDispatcherImageId
        AuthorDispatcherInstanceType: !Ref AuthorDispatcherInstanceType
        AuthorDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupAuthorLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasAuthorDispatcherSecurityGroups
              - !Join [ ",", !Ref AuthorDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        AuthorDispatcherVolumeVarIops: !Ref AuthorDispatcherVolumeVarIops
        AuthorDispatcherVolumeVarSize: !Ref AuthorDispatcherVolumeVarSize
        AuthorDispatcherVolumeVarType: !Ref AuthorDispatcherVolumeVarType

        # Publish
        #
        PublishImageId: !Ref PublishImageId
        PublishInstanceType: !Ref PublishInstanceType
        PublishSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Publish Dispatcher Instance will be created, the SG should not be assigned to the Publish Instance
            - !If
              - CreatePublishDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupPublishLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishSecurityGroups
              - !Join [ ",", !Ref PublishSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishVolumeOptIops: !Ref PublishVolumeOptIops
        PublishVolumeOptSize: !Ref PublishVolumeOptSize
        PublishVolumeOptType: !Ref PublishVolumeOptType
        PublishVolumeTmpIops: !Ref PublishVolumeTmpIops
        PublishVolumeTmpSize: !Ref PublishVolumeTmpSize
        PublishVolumeTmpType: !Ref PublishVolumeTmpType
        PublishVolumeVarIops: !Ref PublishVolumeVarIops
        PublishVolumeVarSize: !Ref PublishVolumeVarSize
        PublishVolumeVarType: !Ref PublishVolumeVarType

        # Publish Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        PublishDispatcherImageId: !Ref PublishDispatcherImageId
        PublishDispatcherInstanceType: !Ref PublishDispatcherInstanceType
        PublishDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupPublishLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishDispatcherSecurityGroups
              - !Join [ ",", !Ref PublishDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishDispatcherVolumeVarIops: !Ref PublishDispatcherVolumeVarIops
        PublishDispatcherVolumeVarSize: !Ref PublishDispatcherVolumeVarSize
        PublishDispatcherVolumeVarType: !Ref PublishDispatcherVolumeVarType

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName

  # If a 2nd application subnet has been specified, create a AEM Host Group in it
  G02:
    Condition: CreateHostGroup2
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "hostgroup.yaml"
      Tags:
      # Which instance of the applied role (e.g. "1" for "Publish-1")
      - Key: "role_index"
        Value: "2"
      Parameters:
        # Naming details
        #
        Designation: "2"
        RootStackName: !Ref RootStackName

        # Host Group configuration
        #
        AvailabilityZone: !Select [ "1", !Ref HostGroupsAvailabilityZones ]
        IamInstanceProfile: !Ref IamInstanceProfile
        RootKeyName: !Ref RootKeyName
        SubnetId: !Select [ "1", !Ref HostGroupsSubnetIds ]

        # Additional features
        #
        FeatureAutoSnapshot: !Ref FeatureAutoSnapshot
        FeatureUptimeWindows: !Join [ ",", !Ref FeatureUptimeWindows ]
        FeatureVolumeEncryption: !Ref FeatureVolumeEncryption

        # Publish
        #
        PublishImageId: !Ref PublishImageId
        PublishInstanceType: !Ref PublishInstanceType
        PublishSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Publish Dispatcher Instance will be created, the SG should not be assigned to the Publish Instance
            - !If
              - CreatePublishDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupPublishLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishSecurityGroups
              - !Join [ ",", !Ref PublishSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishVolumeOptIops: !Ref PublishVolumeOptIops
        PublishVolumeOptSize: !Ref PublishVolumeOptSize
        PublishVolumeOptType: !Ref PublishVolumeOptType
        PublishVolumeTmpIops: !Ref PublishVolumeTmpIops
        PublishVolumeTmpSize: !Ref PublishVolumeTmpSize
        PublishVolumeTmpType: !Ref PublishVolumeTmpType
        PublishVolumeVarIops: !Ref PublishVolumeVarIops
        PublishVolumeVarSize: !Ref PublishVolumeVarSize
        PublishVolumeVarType: !Ref PublishVolumeVarType

        # Publish Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        PublishDispatcherImageId: !Ref PublishDispatcherImageId
        PublishDispatcherInstanceType: !Ref PublishDispatcherInstanceType
        PublishDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupPublishLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishDispatcherSecurityGroups
              - !Join [ ",", !Ref PublishDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishDispatcherVolumeVarIops: !Ref PublishDispatcherVolumeVarIops
        PublishDispatcherVolumeVarSize: !Ref PublishDispatcherVolumeVarSize
        PublishDispatcherVolumeVarType: !Ref PublishDispatcherVolumeVarType

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName

  # If a 3rd application subnet has been specified, create a AEM Host Group in it
  G03:
    Condition: CreateHostGroup3
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "hostgroup.yaml"
      Tags:
      # Which instance of the applied role (e.g. "1" for "Publish-1")
      - Key: "role_index"
        Value: "3"
      Parameters:
        # Naming details
        #
        Designation: "3"
        RootStackName: !Ref RootStackName

        # Host Group configuration
        #
        AvailabilityZone: !Select [ "2", !Ref HostGroupsAvailabilityZones ]
        IamInstanceProfile: !Ref IamInstanceProfile
        RootKeyName: !Ref RootKeyName
        SubnetId: !Select [ "2", !Ref HostGroupsSubnetIds ]

        # Additional features
        #
        FeatureAutoSnapshot: !Ref FeatureAutoSnapshot
        FeatureUptimeWindows: !Join [ ",", !Ref FeatureUptimeWindows ]
        FeatureVolumeEncryption: !Ref FeatureVolumeEncryption

        # Publish
        #
        PublishImageId: !Ref PublishImageId
        PublishInstanceType: !Ref PublishInstanceType
        PublishSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If a dedicated Publish Dispatcher Instance will be created, the SG should not be assigned to the Publish Instance
            - !If
              - CreatePublishDispatcherInstance
              - !Ref AWS::NoValue
              # If no LBs are created, there won't be any Security Group to assign
              - !If
                - CreateLb
                - !Ref SecurityGroupPublishLbTarget
                - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishSecurityGroups
              - !Join [ ",", !Ref PublishSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishVolumeOptIops: !Ref PublishVolumeOptIops
        PublishVolumeOptSize: !Ref PublishVolumeOptSize
        PublishVolumeOptType: !Ref PublishVolumeOptType
        PublishVolumeTmpIops: !Ref PublishVolumeTmpIops
        PublishVolumeTmpSize: !Ref PublishVolumeTmpSize
        PublishVolumeTmpType: !Ref PublishVolumeTmpType
        PublishVolumeVarIops: !Ref PublishVolumeVarIops
        PublishVolumeVarSize: !Ref PublishVolumeVarSize
        PublishVolumeVarType: !Ref PublishVolumeVarType

        # Publish Dispatcher (optional; parameters passed here will be ignored if no dispatcher will be created)
        #
        PublishDispatcherImageId: !Ref PublishDispatcherImageId
        PublishDispatcherInstanceType: !Ref PublishDispatcherInstanceType
        PublishDispatcherSecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupEnv
            # If no LBs are created, there won't be any Security Group to assign
            - !If
              - CreateLb
              - !Ref SecurityGroupPublishLbTarget
              - !Ref AWS::NoValue
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasPublishDispatcherSecurityGroups
              - !Join [ ",", !Ref PublishDispatcherSecurityGroupIds ]
              - !Ref AWS::NoValue
        PublishDispatcherVolumeVarIops: !Ref PublishDispatcherVolumeVarIops
        PublishDispatcherVolumeVarSize: !Ref PublishDispatcherVolumeVarSize
        PublishDispatcherVolumeVarType: !Ref PublishDispatcherVolumeVarType

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName

  #=======================================
  # LB layer
  #=======================================

  #----------------------------
  # Security Groups
  #----------------------------

  SecurityGroupAuthorLb:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules that control the traffic from and to the Author Load Balancer in env ${RootStackName}"
      SecurityGroupIngress: !If
        # If all traffic should be allowed, we have to create the ingress rules for the incoming traffic
        - AllowAllTraffic
        - - !If
            # If HTTP is enabled, then let the HTTP port pass through this Security Group
            - EnableHttp
            - CidrIp: "0.0.0.0/0"
              Description: "Internet HTTP"
              FromPort: !Ref LbHttpPort
              IpProtocol: "tcp"
              ToPort: !Ref LbHttpPort
            - !Ref AWS::NoValue
          - !If
            # If HTTPS is enabled, then let the HTTPS port pass through this Security Group
            - EnableHttps
            - CidrIp: "0.0.0.0/0"
              Description: "Internet HTTPS"
              FromPort: !Ref LbHttpsPort
              IpProtocol: "tcp"
              ToPort: !Ref LbHttpsPort
            - !Ref AWS::NoValue
        - !Ref AWS::NoValue
      VpcId: !Ref VpcId
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-author-lb"

  SecurityGroupPublishLb:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules that control the traffic from and to the Publish Load Balancer in env ${RootStackName}"
      SecurityGroupIngress: !If
          # If all traffic should be allowed, we have to create the ingress rules for the incoming traffic
          - AllowAllTraffic
          - - !If
              # If HTTP is enabled, then let the HTTP port pass through this Security Group
              - EnableHttp
              - CidrIp: "0.0.0.0/0"
                Description: "Internet HTTP"
                FromPort: !Ref LbHttpPort
                IpProtocol: "tcp"
                ToPort: !Ref LbHttpPort
              - !Ref AWS::NoValue
            - !If
              # If HTTPS is enabled, then let the HTTPS port pass through this Security Group
              - EnableHttps
              - CidrIp: "0.0.0.0/0"
                Description: "Internet HTTPS"
                FromPort: !Ref LbHttpsPort
                IpProtocol: "tcp"
                ToPort: !Ref LbHttpsPort
              - !Ref AWS::NoValue
          - !Ref AWS::NoValue
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-publish-lb"
      VpcId: !Ref VpcId

  # SG LB-Target = SG that receives traffic from the LB (to limit the instances that can be accessed via LB)
  SecurityGroupAuthorLbTarget:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules for connections to the targets of the Author LB in env ${RootStackName}"
      SecurityGroupEgress:
      - Description: "Author LB"
        DestinationSecurityGroupId: !Ref SecurityGroupAuthorLb
        IpProtocol: "-1"
      SecurityGroupIngress:
      - Description: "Author LB"
        FromPort: !Ref LbTargetPort
        IpProtocol: "tcp"
        SourceSecurityGroupId: !Ref SecurityGroupAuthorLb
        ToPort: !Ref LbTargetPort
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-author-lb-target"
      VpcId: !Ref VpcId

  # SG LB-Target = SG that receives traffic from the LB (to limit the instances that can be accessed via LB)
  SecurityGroupPublishLbTarget:
    Condition: CreateLb
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Rules for connections to the targets of the Publish LB in env ${RootStackName}"
      SecurityGroupEgress:
      - Description: "Publish LB"
        DestinationSecurityGroupId: !Ref SecurityGroupPublishLb
        IpProtocol: "-1"
      SecurityGroupIngress:
      - Description: "Publish LB"
        FromPort: !Ref LbTargetPort
        IpProtocol: "tcp"
        SourceSecurityGroupId: !Ref SecurityGroupPublishLb
        ToPort: !Ref LbTargetPort
      Tags:
      - Key: "Name"
        Value: !Sub "${RootStackName}-sg-publish-lb-target"
      VpcId: !Ref VpcId

  #----------------------------
  # LBs
  #----------------------------

  AuthorLb:
    Condition: CreateLb
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "../../../resources/elb/alb.yaml"
      Parameters:
        # Naming details
        #
        Designation: "author"
        RootStackName: !Ref RootStackName

        # ALB configuration
        #
        DeregistrationDelay: !Ref LbDeregistrationDelay
        EnableHttp2: !Ref LbEnableHttp2
        Scheme: !If
          - IsPublicLb
          - "internet-facing"
          - "internal"
        SecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupAuthorLb
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasLbSecurityGroups
              - !Join [ ",",  !Ref LbSecurityGroupIds ]
              - !Ref AWS::NoValue
        StickinessDuration: !Ref LbStickinessDuration
        SubnetIds: !Join
          - ","
          - !Ref LbSubnetIds
        TargetPort: !Ref LbTargetPort
        TargetProtocol: !Ref LbTargetProtocol
        VpcId: !Ref VpcId

        # ALB HTTP configuration (optional)
        #
        HttpPort: !Ref LbHttpPort

        # ALB HTTPS configuration (optional)
        #
        HttpsPort: !Ref LbHttpsPort
        SslCertificateArn: !Ref LbAuthorSslCertificateArn

        # Health check configuration (optional)
        #
        HealthCheckInterval: !Ref LbHealthCheckInterval
        HealthCheckPath: !Ref LbHealthCheckPath
        HealthCheckProtocol: !Ref LbHealthCheckProtocol
        HealthCheckTimeout: !Ref LbHealthCheckTimeout
        HealthyStatusCode: !Ref LbHealthyStatusCode
        HealthyThresholdCount: !Ref LbHealthyThresholdCount
        UnhealthyThresholdCount: !Ref LbUnhealthyThresholdCount

        # Target 01
        #
        Instance1Id:
          !GetAtt G01.Outputs.LoadBalancedAuthorInstance

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName
        TimeToLive: !Ref LbTimeToLive

  PublishLb:
    Condition: CreateLb
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "../../../resources/elb/alb.yaml"
      Parameters:
        # Naming details
        #
        Designation: "publish"
        RootStackName: !Ref RootStackName

        # ALB configuration
        #
        DeregistrationDelay: !Ref LbDeregistrationDelay
        EnableHttp2: !Ref LbEnableHttp2
        Scheme: !If
          - IsPublicLb
          - "internet-facing"
          - "internal"
        SecurityGroupIds: !Join
          - ","
          - - !Ref SecurityGroupPublishLb
            # If additional Security Groups have been specified, add them to this list (for that we need to transform the array back to a String)
            - !If
              - HasLbSecurityGroups
              - !Join [ ",", !Ref LbSecurityGroupIds ]
              - !Ref AWS::NoValue
        StickinessDuration: !Ref LbStickinessDuration
        SubnetIds: !Join
          - ","
          - !Ref LbSubnetIds
        TargetPort: !Ref LbTargetPort
        TargetProtocol: !Ref LbTargetProtocol
        VpcId: !Ref VpcId

        # ALB HTTP configuration (optional)
        #
        HttpPort: !Ref LbHttpPort

        # ALB HTTPS configuration (optional)
        #
        HttpsPort: !Ref LbHttpsPort
        SslCertificateArn: !Ref LbPublishSslCertificateArn

        # Health check configuration (optional)
        #
        HealthCheckInterval: !Ref LbHealthCheckInterval
        HealthCheckPath: !Ref LbHealthCheckPath
        HealthCheckProtocol: !Ref LbHealthCheckProtocol
        HealthCheckTimeout: !Ref LbHealthCheckTimeout
        HealthyStatusCode: !Ref LbHealthyStatusCode
        HealthyThresholdCount: !Ref LbHealthyThresholdCount
        UnhealthyThresholdCount: !Ref LbUnhealthyThresholdCount

        # Target 01
        #
        Instance1Id:
          !GetAtt G01.Outputs.LoadBalancedPublishInstance

        # Target 02 (optional)
        #
        Instance2Id: !If
          - CreateHostGroup2
          - !GetAtt G02.Outputs.LoadBalancedPublishInstance
          - !Ref AWS::NoValue

        # Target 03 (optional)
        #
        Instance3Id: !If
          - CreateHostGroup3
          - !GetAtt G03.Outputs.LoadBalancedPublishInstance
          - !Ref AWS::NoValue

        # DNS Record configuration (optional)
        #
        DnsServiceToken: !Ref DnsServiceToken
        HostedZoneName: !Ref HostedZoneName
        TimeToLive: !Ref LbTimeToLive


################################################################################
#
# Outputs (optional)
# Declares output values that you can import into other stacks (to create cross-stack references)
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
#
################################################################################

Outputs:
  #=======================================
  # Instance / Host Group layer
  #=======================================

  SecurityGroupEnv:
    Description: "The Security Group that is attached to all Instances in this environment."
    Value: !Ref SecurityGroupEnv

  #=======================================
  # LB layer
  #=======================================

  SecurityGroupAuthorLb:
    Condition: CreateLb
    Description: "The Security Group that is attached to the Author Load Balancer in this environment."
    Value: !Ref SecurityGroupAuthorLb

  SecurityGroupPublishLb:
    Condition: CreateLb
    Description: "The Security Group that is attached to the Publish Load Balancer in this environment."
    Value: !Ref SecurityGroupPublishLb

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Site-to-Site VPN connection via either Transit Gateway or Virtual Private Gateway'

################################################################################
#
# Decision Trees:
#
#   Amazon side ASN (Autonomous System Number):
#     AmazonSideAsn != 0
#       true  -> Custom value
#       false -> Default value [default]
#
#   Route propagation:
#     RoutePropagationTargets != []
#       true  -> Enabled
#       false -> Disabled [default]
#
#   Static Routes:
#     StaticRoutesCount != 0
#       true  -> Enable dynamic routing and create no static routes [default]
#       false -> Enable static routing and create <number> static routes
#
#   VPN Solution:
#     TransitGatewayId != ''
#       true  -> Connect VPC via Transit Gateway
#       false -> Do nothing [default]
#     CustomerGatewayId != ''
#       true  -> Connect VPC via Virtual Private Gateway
#       false -> Do nothing [default]
#
################################################################################


################################################################################
#
# Metadata (optional)
# provide details about the template
#
# See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
#
################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Naming details'
        Parameters:
          - RootStackName
      - Label:
          default: 'VPN Connection configuration'
        Parameters:
          - StaticRoutes
          - StaticRoutesCount
          - VpcId
      - Label:
          default: 'Transit Gateway (optional)'
        Parameters:
          - RouteTables
          - RouteTablesCount
          - SubnetIds
          - TransitGatewayId
      - Label:
          default: 'Virtual Private Gateway (optional)'
        Parameters:
          - AmazonSideAsn
          - CustomerGatewayId
          - RoutePropagationTargets


################################################################################
#
# Parameters (optional)
# Passes values into templates when creating a stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
################################################################################

Parameters:
  #=======================================
  # Naming details
  #=======================================

  RootStackName:
    Description: 'The name of the top-level Stack this Stack, if nested, ultimately belongs to (this Stacks name else; examples: "infra" or "nonprod").'
    Type: String

  #=======================================
  # VPN Connection configuration
  #=======================================

  StaticRoutes:
    Description: 'A list of CIDR blocks that is associated with the local subnet of the customer network (max: 5).'
    Type: CommaDelimitedList
    Default: ''

  StaticRoutesCount:
    Description: 'The number of CIDR blocks specified in StaticRoutes (max: 5).'
    Type: Number
    AllowedValues: [ 0, 1, 2, 3, 4, 5 ]
    Default: 0

  VpcId:
    Description: 'The ID of the VPC to associate with this VPNs Gateway.'
    Type: String

  #=======================================
  # Transit Gateway (optional)
  #=======================================

  RouteTables:
    Description: 'The IDs of the route tables that should be used when creating static routes (max: 3).'
    Type: CommaDelimitedList
    Default: ''

  RouteTablesCount:
    Description: 'The number of route tables blocks specified in RouteTables (max: 3).'
    Type: Number
    AllowedValues: [ 0, 1, 2, 3 ]
    Default: 0

  SubnetIds:
    Description: 'The IDs of one or more subnets to attach the Transit Gateway to. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.'
    Type: CommaDelimitedList
    Default: ''

  TransitGatewayId:
    Description: 'The ID of the transit gateway associated with the VPN connection. You must specify either TransitGatewayId or use the option to create a VPN Gateway, but not both.'
    Type: String
    Default: ''

  #=======================================
  # Virtual Private Gateway (optional)
  #=======================================

  AmazonSideAsn:
    Description: 'The private Autonomous System Number (ASN) for the Amazon side of a BGP session.'
    Type: Number
    Default: 0

  CustomerGatewayId:
    Description: 'The ID of the customer gateway. This can either be an embedded JSON object or a reference to a Gateway ID.'
    Type: String
    Default: ''

  RoutePropagationTargets:
    Description: 'A list of RouteTable IDs that are associated with a VPC. The routing tables must be associated with the same VPC that the virtual private gateway is attached to.'
    Type: CommaDelimitedList
    Default: ''


################################################################################
#
# Conditions (optional)
# Includes statements that define when a resource is created or when a property is defined
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
#
################################################################################

Conditions:
  #=======================================
  # Shared
  #=======================================

  # Create Route 1 if one or more (-> at least Route 2) have been provided
  CreateStaticRoutes: !Not
      - !Equals [ !Ref StaticRoutesCount, 0 ]

  #=======================================
  # Transit Gateway
  #=======================================

  # Create Routes in the first RouteTable if any routes and one or more RouteTables have been provided
  CreateStaticTgwRoutes1: !Or
    - !Condition CreateStaticTgwRoutes2
    - !And
      - !Condition UseTransitGateway
      - !Condition CreateStaticRoutes
      - !Equals [ !Ref RouteTablesCount, 1 ]

  # Create Routes in the second RouteTable if any routes and two or more RouteTables have been provided
  CreateStaticTgwRoutes2: !Or
    - !Condition CreateStaticTgwRoutes3
    - !And
      - !Condition UseTransitGateway
      - !Condition CreateStaticRoutes
      - !Equals [ !Ref RouteTablesCount, 2 ]

  # Create Routes in the third RouteTable if any routes and three RouteTables have been provided
  CreateStaticTgwRoutes3: !And
    - !Condition UseTransitGateway
    - !Condition CreateStaticRoutes
    - !Equals [ !Ref RouteTablesCount, 3 ]

  # If the user selected to use a Transit Gateway
  UseTransitGateway: !Not
    - !Equals
      - !Ref TransitGatewayId
      - ''

  #=======================================
  # Virtual Private Gateway
  #=======================================

  # Create Routes to the VPNConnection if any routes have been provided
  CreateStaticVgwRoutes: !And
    - !Condition UseVirtualPrivateGateway
    - !Condition CreateStaticRoutes

  # Setup a route propagation if targets have been specified
  PropagateVgwRoutes: !And
    - !Condition UseVirtualPrivateGateway
    - !Not
      - !Equals
        - !Select [ 0, !Ref RoutePropagationTargets ]
        - ''

  # If no ASN was given, we won't specify it in the VPNGateway
  SetAmazonSideAsn: !Not
    - !Equals [ !Ref AmazonSideAsn, 0 ]

  # If the user selected to use a Virtual Private Gateway
  UseVirtualPrivateGateway: !Not
    - !Equals
      - !Ref CustomerGatewayId
      - ''


################################################################################
#
# Resources (required)
# Declares the AWS resources that you want to include in the stack
#
# Naming Conventions:
#  - Name attribute: !Sub '${RootStackName}-<identifier>'
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
#
################################################################################

Resources:
  #=======================================
  # Shared
  #=======================================

  # Nothing to do here

  #=======================================
  # Transit Gateway
  #=======================================

  TransitGatewayAttachment:
    Condition: UseTransitGateway
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Sub '${RootStackName}-tgw-attachment'
      TransitGatewayId: !Ref TransitGatewayId
      VpcId: !Ref VpcId

  #----------------------------
  # Static Routes
  #----------------------------

  StaticTgwRoutes1:
    Condition: CreateStaticTgwRoutes1
    DependsOn: [ TransitGatewayAttachment ]
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './routes.yaml'
      Parameters:
        DestinationCidrBlocks: !Join
          - ','
          - !Ref StaticRoutes
        DestinationCidrBlocksCount: !Ref StaticRoutesCount
        RouteTableId: !Select [ '0', !Ref RouteTables ]
        TransitGatewayId: !Ref TransitGatewayId

  StaticTgwRoutes2:
    Condition: CreateStaticTgwRoutes2
    DependsOn: [ TransitGatewayAttachment ]
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './routes.yaml'
      Parameters:
        DestinationCidrBlocks: !Join
          - ','
          - !Ref StaticRoutes
        DestinationCidrBlocksCount: !Ref StaticRoutesCount
        RouteTableId: !Select [ '1', !Ref RouteTables ]
        TransitGatewayId: !Ref TransitGatewayId

  StaticTgwRoutes3:
    Condition: CreateStaticTgwRoutes3
    DependsOn: [ TransitGatewayAttachment ]
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './routes.yaml'
      Parameters:
        DestinationCidrBlocks: !Join
          - ','
          - !Ref StaticRoutes
        DestinationCidrBlocksCount: !Ref StaticRoutesCount
        RouteTableId: !Select [ '2', !Ref RouteTables ]
        TransitGatewayId: !Ref TransitGatewayId

  #=======================================
  # Virtual Private Gateway
  #=======================================

  VpnConnection:
    Condition: UseVirtualPrivateGateway
    DependsOn: [ VpnGatewayAttachment ]
    Type: AWS::EC2::VPNConnection
    Properties:
      Type: 'ipsec.1'
      CustomerGatewayId: !Ref CustomerGatewayId
      StaticRoutesOnly: !If
        # If we want to create one or more static routes, we need static routing
        - CreateVgwRoute1
        - true
        - false
      Tags:
        - Key: Name
          Value: !Sub 'company-network <> ${RootStackName}'
      VpnGatewayId: !Ref VpnGateway

  VpnGateway:
    Condition: UseVirtualPrivateGateway
    Type: AWS::EC2::VPNGateway
    Properties:
      AmazonSideAsn: !If
        - SetAmazonSideAsn
        - !Ref AmazonSideAsn
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub '${RootStackName}-vgw'
      Type: 'ipsec.1'

  VpnGatewayAttachment:
    Condition: UseVirtualPrivateGateway
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VpcId
      VpnGatewayId: !Ref VpnGateway

  VpnGatewayRoutePropagation:
    Condition: PropagateVgwRoutes
    DependsOn: [ VpnGatewayAttachment ]
    Type: AWS::EC2::VPNGatewayRoutePropagation
    Properties:
      RouteTableIds: !Ref RoutePropagationTargets
      VpnGatewayId: !Ref VpnGateway

  #----------------------------
  # Static Routes
  #----------------------------

  StaticVgwRoutes:
    Condition: CreateStaticVgwRoutes
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: './routes.yaml'
      Parameters:
        DestinationCidrBlocks: !Join
          - ','
          - !Ref StaticRoutes
        DestinationCidrBlocksCount: !Ref StaticRoutesCount
        VpnConnectionId: !Ref VpnConnection

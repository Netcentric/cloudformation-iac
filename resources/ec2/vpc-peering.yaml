AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation IaC --- VPC Peering Connection between two virtual private clouds (VPCs). This template also sets up proper routing between the two VPCs if the corresponding Route Tables (up to three, e.g. for Subnets in three different Regions) are provided."

################################################################################
#
# Decision Trees: none
#
################################################################################


################################################################################
#
# Metadata (optional)
# provide details about the template
#
# See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/metadata-section-structure.html
#
################################################################################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Naming details"
        Parameters:
          - PeerVpcName
          - RequestingVpcName
      - Label:
          default: "Requesting VPC"
        Parameters:
          - RequestingVpcCidr
          - RequestingVpcId
          - RequestingVpcRouteTables
          - RequestingVpcRouteTablesCount
      - Label:
          default: "Peer VPC"
        Parameters:
          - PeerVpcCidr
          - PeerVpcId
          - PeerVpcRouteTables
          - PeerVpcRouteTablesCount


################################################################################
#
# Parameters (optional)
# Passes values into templates when creating a stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
#
################################################################################

Parameters:
  #=======================================
  # Naming details
  #=======================================

  PeerVpcName:
    Description: "The name of the VPC that is accepting the peering (the accepter VPC)."
    Type: String

  RequestingVpcName:
    Description: "The name of the VPC that is requesting the peering (the requester VPC)."
    Type: String

  #=======================================
  # Requesting VPC
  #=======================================

  RequestingVpcCidr:
    Description: "Private IP class of the requester VPC (example: \"10.31.0.0/22\")."
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

  RequestingVpcId:
    Description: "The ID of the requester VPC."
    Type: AWS::EC2::VPC::Id

  RequestingVpcRouteTables:
    Description: "The IDs of Route Tables in the requester VPC where Routes to the Peering Connection should be added. Must be as many items as specified in \"RequestingVpcRouteTablesCount\"."
    Type: CommaDelimitedList

  RequestingVpcRouteTablesCount:
    Description: "The number of Route Tables provided for the requester VPC."
    Type: Number
    AllowedValues: [ 1, 2, 3 ]

  #=======================================
  # Peer VPC
  #=======================================

  PeerVpcCidr:
    Description: "Private IP class of the accepter VPC (example: \"10.31.0.0/22\")."
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

  PeerVpcId:
    Description: "The ID of the accepter VPC."
    Type: AWS::EC2::VPC::Id

  PeerVpcRouteTables:
    Description: "The IDs of Route Tables in the accepter VPC where Routes to the Peering Connection should be added. Only used if the accepter VPC is in the same account; must be as many items as specified in \"PeerVpcRouteTablesCount\"."
    Type: CommaDelimitedList

  PeerVpcRouteTablesCount:
    Description: "The number of Route Tables provided for the accepter VPC."
    Type: Number
    AllowedValues: [ 1, 2, 3 ]


################################################################################
#
# Conditions (optional)
# Includes statements that define when a resource is created or when a property is defined
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
#
################################################################################

Conditions:
  #----------------------------
  # Requester VPC
  #----------------------------

  # Create Route #2 if enough Route Tables have been provided
  CreateReqRoute2: !Or
    - !Equals [ !Ref RequestingVpcRouteTablesCount, 2 ]
    - !Condition CreateReqRoute3

  # Create Route #3 if enough Route Tables have been provided
  CreateReqRoute3: !Equals [ !Ref RequestingVpcRouteTablesCount, 3 ]

  #----------------------------
  # Accepter VPC
  #----------------------------

  # Create Route #2 if the accepter VPC is in the same account and enough Route Tables have been provided
  CreatePeerRoute2: !Or
    - !Equals [ !Ref PeerVpcRouteTablesCount, 2 ]
    - !Condition CreatePeerRoute3

  # Create Route #3 if the accepter VPC is in the same account and enough Route Tables have been provided
  CreatePeerRoute3: !Equals [ !Ref PeerVpcRouteTablesCount, 3 ]


################################################################################
#
# Resources (required)
# Declares the AWS resources that you want to include in the stack
#
# See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
#
################################################################################

Resources:
  #=======================================
  # Peering Connection
  #=======================================

  VpcPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      PeerVpcId: !Ref PeerVpcId
      Tags:
      - Key: "Name"
        Value: !Sub "${RequestingVpcName} <-> ${PeerVpcName}"
      VpcId: !Ref RequestingVpcId

  #----------------------------
  # Add Routes in the requester VPC
  #----------------------------

  ReqRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref PeerVpcCidr
      RouteTableId: !Select [ "0", !Ref RequestingVpcRouteTables ]
      VpcPeeringConnectionId: !Ref VpcPeeringConnection

  ReqRoute2:
    Condition: CreateReqRoute2
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref PeerVpcCidr
      RouteTableId: !Select [ "1", !Ref RequestingVpcRouteTables ]
      VpcPeeringConnectionId: !Ref VpcPeeringConnection

  ReqRoute3:
    Condition: CreateReqRoute3
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref PeerVpcCidr
      RouteTableId: !Select [ "2", !Ref RequestingVpcRouteTables ]
      VpcPeeringConnectionId: !Ref VpcPeeringConnection

  #----------------------------
  # Add Routes in the accepter VPC
  #----------------------------

  PeerRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref RequestingVpcCidr
      RouteTableId: !Select [ "0", !Ref PeerVpcRouteTables ]
      VpcPeeringConnectionId: !Ref VpcPeeringConnection

  PeerRoute2:
    Condition: CreatePeerRoute2
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref RequestingVpcCidr
      RouteTableId: !Select [ "1", !Ref PeerVpcRouteTables ]
      VpcPeeringConnectionId: !Ref VpcPeeringConnection

  PeerRoute3:
    Condition: CreatePeerRoute3
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref RequestingVpcCidr
      RouteTableId: !Select [ "2", !Ref PeerVpcRouteTables ]
      VpcPeeringConnectionId: !Ref VpcPeeringConnection
